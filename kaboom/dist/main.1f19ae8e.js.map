{"version":3,"sources":["../src/utils.ts","../src/math.ts","../src/fps.ts","../src/timer.ts","../src/kaboom.ts","main.js","../../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["IDList","args","__publicField","v","id","__name","deepEq","o1","o2","t1","t2","k1","k2","k","v1","v2","downloadURL","url","filename","a","downloadBlob","blob","isDataURL","str","uid","warned","deprecateMsg","oldName","newName","deprecate","newFunc","deg2rad","deg","rad2deg","rad","clamp","val","min","max","lerp","b","t","map","l1","h1","l2","h2","mapc","_Vec2","x","y","angle","p2","vec2","s","n","other","Vec2","Vec3","z","vec3","_Color","r","g","arr","h","l","rgb","hue2rgb","p","q","Color","hsl2rgb","Quad","quad","w","Mat4","m","out","i","j","p4","f00","f01","f02","f03","f04","f05","f06","f07","f08","f09","f10","f11","f12","f13","f14","f15","f16","f17","f18","det","wave","lo","hi","f","A","C","M","RNG","seed","defRNG","rng","randSeed","rand","randi","chance","choose","list","testRectRect2","r1","r2","testRectRect","testLineLineT","denom","ua","ub","testLineLine","testRectLine","testRectPoint","Line","pt","testRectCircle","c","nx","ny","testRectPolygon","testPolygonPolygon","testLinePoint","testLineCircle","testLinePolygon","testPolygonPoint","p1","testCirclePoint","testCircleCircle","c1","c2","testCirclePolygon","testPointPoint","testAreaRect","testAreaLine","testAreaCircle","testAreaPolygon","testAreaPoint","testAreaArea","a1","a2","minkDiff","Rect","Circle","center","radius","FPSCounter","dt","Timer","time","action","KEY_ALIAS","MOUSE_BUTTONS","PREVENT_DEFAULT_KEYS","ASCII_CHARS","CP437_CHARS","MIN_GAIN","MAX_GAIN","MIN_SPEED","MAX_SPEED","MIN_DETUNE","MAX_DETUNE","DEF_ORIGIN","DEF_GRAVITY","QUEUE_COUNT","BG_GRID_SIZE","DEF_FONT","DBG_FONT","STRIDE","VERT_TEMPLATE","FRAG_TEMPLATE","DEF_VERT","DEF_FRAG","COMP_DESC","COMP_EVENTS","processButtonState","enterFullscreen","el","exitFullscreen","getFullscreenElement","originPt","orig","createEmptyAudioBuffer","kaboom_default","gopt","app","_a","_b","_c","root","canvas","gscale","styles","gl","gfx","defShader","makeShader","emptyTex","makeTex","vbuf","ibuf","bgTex","updateViewport","audio","ctx","masterNode","burpSnd","burp_default","buf","assets","game","make","ev","cb","load","prom","resolve","reject","err","debug","loadProgress","loadRoot","path","fetchURL","res","loadImg","src","img","loadFont","name","gw","gh","opt","font","makeFont","getSprite","getSound","getFont","getShader","slice","dx","dy","frames","qw","qh","loadSpriteAtlas","data","data2","loadSprite","atlas","info","spr","loadRawSprite","tex","sprite","loadPedit","__async","images","loadAseprite","imgSrc","jsonSrc","size","anim","loadShader","vert","frag","isUrl","loadRawShader","shader","resolveUrl","vcode","fcode","loadSound","resolve2","reject2","snd","loadBean","bean_default","volume","play","pb","onLoad","pb2","stopped","srcNode","gainNode","pos","startTime","stopTime","handle","seek","oldNode","burp","filter","wrap","vertSrc","fragSrc","msg","vertShader","fragShader","uniform","loc","chars","cols","rows","charMap","ch","drawRaw","verts","indices","fixed","flush","transform","screen2ndc","frameStart","drawUVQuad","width","height","frameEnd","drawCalls","ndc2screen","applyMatrix","pushTranslate","pushScale","pushRotateX","pushRotateY","pushRotateZ","pushTransform","popTransform","offset","color","opacity","drawTexture","scale","repX","repY","__spreadProps","__spreadValues","loading","drawSprite","findAsset","getArcPts","radiusX","radiusY","start","end","nverts","step","pts","drawRect","drawPolygon","drawLine","dis","drawLines","minLen","drawTriangle","drawCircle","drawEllipse","npts","applyCharTransform","fchar","tr","TEXT_STYLE_RE","compileStyledText","text","charStyleMap","renderText","idxOffset","match","origIdx","lib","def","formatText","cw","curX","th","tw","flines","curLine","lastSpace","cursor","char","fchars","ox","oy","idx","line","ln","oxl","cn","qpos","localIdx","style","drawText","drawFormattedText","ftext","isFullscreen","ww","wh","rw","rc","sw","sh","rg","mousePos","mouseDeltaPos","isMousePressed","isMouseDown","isMouseReleased","isMouseMoved","isKeyPressed","isKeyPressedRepeat","isKeyDown","isKeyReleased","charInputted","screenshot","fullscreen","quit","updateFrame","mouseWorldPos","toWorld","layers","camPos","camScale","camRot","shake","intensity","toScreen","comps","compStates","customState","events","obj","tag","child","comp","state","func","checkDeps","dep","_d","_e","_f","gEvents","e","on","event","onUpdate","onDraw","onCollide","e1","col","e2","e3","onClick","onMousePress","o","onHover","onNotHover","wait","loop","newF","onKeyDown","cancellers","key","onKeyPress","onKeyPressRepeat","onKeyRelease","onMouseDown","onMouseRelease","onMouseMove","onCharInput","onTouchStart","onTouchMove","onTouchEnd","enterDebugMode","toFixed","record","enterBurpMode","gravity","regCursor","draw","makeCollision","target","md","dist","ray","minT","p3","numCols","lines","dest","speed","diff","rotate","origin","layer","follow","move","dir","d","outview","timer","isOut","screenRect","cleanup","area","colliding","mpos","getRenderProps","curAnim","calcTexScale","_g","prevAnim","update","rect","uvquad","circle","outline","timers","DEF_JUMP_FORCE","MAX_VEL","body","velY","curPlatform","lastPlatformPos","canDouble","justFall","y1","y2","x1","x2","x3","x4","force","solid","stay","health","hp","lifespan","fade","startFade","initState","stateList","transitions","initStateHook","trigger","oldState","available","from","to","scene","go","cancel","getData","setData","plug","plugin","funcs","grid","level","addLevel","objs","longRow","sym","posComp","row","syms","frameRate","stream","audioDest","audioStream","firstAudioTrack","recorder","chunks","focus","isFocused","add","readd","destroy","destroyAll","get","every","revery","explode","kaSprite","boomSprite","ka_default","boom_default","addKaboom","boom","ka","drawFrame","cam","drawLoadScreen","progress","drawInspectText","txt","pad","ftxt","bw","bh","drawDebug","inspecting","lcolor","lwidth","flipped","run","frame","realTime","realDt","apl386_default","apl386o_default","sink_default","sinko_default","kaboom","global","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","type","handled","forEach","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","Array","isArray","length","concat","Function","deps","cached","cache","some"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["export class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nexport function downloadURL(url: string, filename: string) {\n\tconst a = document.createElement(\"a\");\n\tdocument.body.appendChild(a);\n\ta.setAttribute(\"style\", \"display: none\");\n\ta.href = url;\n\ta.download = filename;\n\ta.click();\n\tdocument.body.removeChild(a);\n}\n\nexport function downloadBlob(blob: Blob, filename: string) {\n\tconst url = URL.createObjectURL(blob);\n\tdownloadURL(url, filename);\n\tURL.revokeObjectURL(url);\n}\n\nexport function isDataURL(str: string) {\n\treturn str.match(/^data:\\w+\\/\\w+;base64,.+/);\n}\n\nexport const uid = (() => {\n\tlet id = 0;\n\treturn () => id++;\n})();\n\nconst warned = new Set();\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\tif (!warned.has(oldName)) {\n\t\twarned.add(oldName);\n\t\tconsole.warn(`${oldName} is deprecated. Use ${newName} instead.`);\n\t}\n}\n\nexport const deprecate = (oldName: string, newName: string, newFunc: (...args) => any) => (...args) => {\n\tdeprecateMsg(oldName, newName);\n\treturn newFunc(...args);\n};\n","import {\n\tVec4,\n\tPoint,\n\tPolygon,\n\tArea,\n} from \"./types\";\n\nimport {\n\tdeprecateMsg,\n} from \"./utils\";\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nexport function lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nexport class Vec2 {\n\tx: number = 0;\n\ty: number = 0;\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg);\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle));\n\t}\n\tstatic LEFT = new Vec2(-1, 0);\n\tstatic RIGHT = new Vec2(1, 0);\n\tstatic UP = new Vec2(0, -1);\n\tstatic DOWN = new Vec2(0, 1);\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y);\n\t}\n\tadd(...args): Vec2 {\n\t\tconst p2 = vec2(...args);\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y);\n\t}\n\tsub(...args): Vec2 {\n\t\tconst p2 = vec2(...args);\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y);\n\t}\n\tscale(...args): Vec2 {\n\t\tconst s = vec2(...args);\n\t\treturn new Vec2(this.x * s.x, this.y * s.y);\n\t}\n\tdist(...args): number {\n\t\tconst p2 = vec2(...args);\n\t\treturn Math.sqrt(\n\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t);\n\t}\n\tlen(): number {\n\t\treturn this.dist(new Vec2(0, 0));\n\t}\n\tunit(): Vec2 {\n\t\treturn this.scale(1 / this.len());\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x);\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y;\n\t}\n\tangle(...args): number {\n\t\tconst p2 = vec2(...args);\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t}\n\tlerp(p2: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)));\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y;\n\t}\n\ttoString(): string {\n\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t}\n\tstr(): string {\n\t\treturn this.toString();\n\t}\n}\n\nexport function vec2(...args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\treturn new Vec2(...args);\n}\n\nexport class Vec3 {\n\tx: number = 0;\n\ty: number = 0;\n\tz: number = 0;\n\tconstructor(x: number, y: number, z: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\txy() {\n\t\treturn vec2(this.x, this.y);\n\t}\n}\n\nexport const vec3 = (x, y, z) => new Vec3(x, y, z);\n\nexport class Color {\n\n\tr: number = 255;\n\tg: number = 255;\n\tb: number = 255;\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255);\n\t\tthis.g = clamp(g, 0, 255);\n\t\tthis.b = clamp(b, 0, 255);\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic RED = rgb(255, 0, 0);\n\tstatic GREEN = rgb(0, 255, 0);\n\tstatic BLUE = rgb(0, 0, 255);\n\tstatic YELLOW = rgb(255, 255, 0);\n\tstatic MAGENTA = rgb(255, 0, 255);\n\tstatic CYAN = rgb(0, 255, 255);\n\tstatic WHITE = rgb(255, 255, 255);\n\tstatic BLACK = rgb(0, 0, 0);\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b);\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a);\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a);\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b);\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t);\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\t\t\t;\n\t}\n\n\tstr(): string {\n\t\tdeprecateMsg(\"str()\", \"toString()\");\n\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t}\n\n\ttoString(): string {\n\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t}\n\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn rgb(255 * l, 255 * l, 255 * l);\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1;\n\t\t\tif (t > 1) t -= 1;\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\t\tif (t < 1 / 2) return q;\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\treturn p;\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tconst p = 2 * l - q;\n\t\tconst r = hue2rgb(p, q, h + 1 / 3);\n\t\tconst g = hue2rgb(p, q, h);\n\t\tconst b = hue2rgb(p, q, h - 1 / 3);\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));\n\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone();\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0]);\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args);\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l);\n\nexport class Quad {\n\tx: number = 0;\n\ty: number = 0;\n\tw: number = 1;\n\th: number = 1;\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.w = w;\n\t\tthis.h = h;\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h\n\t\t);\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h);\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h;\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`;\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h);\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t];\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m;\n\t\t}\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4(this.m);\n\t};\n\n\tmult(other: Mat4): Mat4 {\n\n\t\tconst out = [];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out);\n\n\t}\n\n\tmultVec4(p: Vec4): Vec4 {\n\t\treturn {\n\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t};\n\t}\n\n\tmultVec3(p: Vec3): Vec3 {\n\t\tconst p4 = this.multVec4({\n\t\t\tx: p.x,\n\t\t\ty: p.y,\n\t\t\tz: p.z,\n\t\t\tw: 1.0,\n\t\t});\n\t\treturn vec3(p4.x, p4.y, p4.z);\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t);\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t]);\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a);\n\t\treturn new Mat4([\n\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\ttranslate(p: Vec2): Mat4 {\n\t\treturn this.mult(Mat4.translate(p));\n\t}\n\n\tscale(s: Vec2): Mat4 {\n\t\treturn this.mult(Mat4.scale(s));\n\t}\n\n\trotateX(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateX(a));\n\t}\n\n\trotateY(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateY(a));\n\t}\n\n\trotateZ(a: number): Mat4 {\n\t\treturn this.mult(Mat4.rotateZ(a));\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = [];\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out);\n\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString();\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n\nexport class RNG {\n\tseed: number;\n\tconstructor(seed: number) {\n\t\tthis.seed = seed;\n\t}\n\tgen(...args) {\n\t\tif (args.length === 0) {\n\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\treturn this.seed / M;\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn vec2(\n\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t);\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn rgb(\n\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now());\n\nexport function rng(seed: number): RNG {\n\tdeprecateMsg(\"rng()\", \"new RNG()\");\n\treturn new RNG(seed);\n}\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, new Line(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, new Line(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, new Line(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, new Line(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.p1.x, Math.min(c.center.x, r.p2.x));\n\tconst ny = Math.max(r.p1.y, Math.min(c.center.y, r.p2.y));\n\tconst nearestPoint = vec2(nx, ny);\n\treturn nearestPoint.dist(c.center) <= c.radius;\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, [\n\t\tr.p1,\n\t\tvec2(r.p2.x, r.p1.y),\n\t\tr.p2,\n\t\tvec2(r.p1.x, r.p2.y),\n\t]);\n}\n\n// TODO\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\treturn false;\n}\n\n// TODO\nexport function testLineCircle(l: Line, c: Circle): boolean {\n\treturn false;\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true;\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.length; i++) {\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\t\tif (testLineLine(l, { p1, p2 })) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.dist(p) < c.radius;\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.dist(c2.center) < c1.radius + c2.radius;\n}\n\n// TODO\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\treturn false;\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.length; i++) {\n\t\tconst l = {\n\t\t\tp1: p1[i],\n\t\t\tp2: p1[(i + 1) % p1.length],\n\t\t};\n\t\tif (testLinePolygon(l, p2)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(p: Polygon, pt: Point): boolean {\n\n\tlet c = false;\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c;\n\t\t}\n\t}\n\n\treturn c;\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.eq(p2);\n}\n\nexport function testAreaRect(a: Area, r: Rect): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectRect(r, a);\n\t\tcase \"line\": return testRectLine(r, a);\n\t\tcase \"circle\": return testRectCircle(r, a);\n\t\tcase \"polygon\": return testRectPolygon(r, a.pts);\n\t\tcase \"point\": return testRectPoint(r, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaLine(a: Area, l: Line): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectLine(a, l);\n\t\tcase \"line\": return Boolean(testLineLine(a, l));\n\t\tcase \"circle\": return testLineCircle(l, a);\n\t\tcase \"polygon\": return testLinePolygon(l, a.pts);\n\t\tcase \"point\": return testLinePoint(l, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaCircle(a: Area, c: Circle): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectCircle(a, c);\n\t\tcase \"line\": return testLineCircle(a, c);\n\t\tcase \"circle\": return testCircleCircle(a, c);\n\t\tcase \"polygon\": return testCirclePolygon(c, a.pts);\n\t\tcase \"point\": return testCirclePoint(c, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaPolygon(a: Area, p: Polygon): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPolygon(a, p);\n\t\tcase \"line\": return testLinePolygon(a, p);\n\t\tcase \"circle\": return testCirclePolygon(a, p);\n\t\tcase \"polygon\": return testPolygonPolygon(p, a.pts);\n\t\tcase \"point\": return testPolygonPoint(p, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaPoint(a: Area, p: Point): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPoint(a, p);\n\t\tcase \"line\": return testLinePoint(a, p);\n\t\tcase \"circle\": return testCirclePoint(a, p);\n\t\tcase \"polygon\": return testPolygonPoint(a.pts, p);\n\t\tcase \"point\": return testPointPoint(a.pt, p);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nexport function testAreaArea(a1: Area, a2: Area): boolean {\n\tswitch (a2.shape) {\n\t\tcase \"rect\": return testAreaRect(a1, a2);\n\t\tcase \"line\": return testAreaLine(a1, a2);\n\t\tcase \"circle\": return testAreaCircle(a1, a2);\n\t\tcase \"polygon\": return testAreaPolygon(a1, a2.pts);\n\t\tcase \"point\": return testAreaPoint(a1, a2.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a2 as Area).shape}`);\n}\n\nexport function minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nexport class Line {\n\tp1: Vec2;\n\tp2: Vec2;\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1;\n\t\tthis.p2 = p2;\n\t}\n}\n\nexport class Rect {\n\tp1: Vec2;\n\tp2: Vec2;\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1;\n\t\tthis.p2 = p2;\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2;\n\tradius: number;\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\t}\n}\n","export default class FPSCounter {\n\n\tprivate buf: number[] = [];\n\tprivate timer: number = 0;\n\tfps: number = 0;\n\n\ttick(dt: number) {\n\n\t\tthis.buf.push(1 / dt);\n\t\tthis.timer += dt;\n\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0;\n\t\t\tthis.fps = Math.round(this.buf.reduce((a, b) => a + b) / this.buf.length);\n\t\t\tthis.buf = [];\n\t\t}\n\n\t}\n\n}\n","export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time;\n\t\tthis.action = action;\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false;\n\t\tthis.time -= dt;\n\t\tif (this.time <= 0) {\n\t\t\tthis.action();\n\t\t\tthis.finished = true;\n\t\t\tthis.time = 0;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\treset(time) {\n\t\tthis.time = time;\n\t\tthis.finished = false;\n\t}\n\n}\n","import {\n\tvec2,\n\tvec3,\n\tVec3,\n\tRect,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\";\n\nimport {\n\tIDList,\n\tdownloadURL,\n\tdownloadBlob,\n\tuid,\n\tdeprecate,\n\tdeprecateMsg,\n\tisDataURL,\n\tdeepEq,\n} from \"./utils\";\n\nimport {\n\tGfxShader,\n\tGfxFont,\n\tTexFilter,\n\tRenderProps,\n\tCharTransform,\n\tCharTransformFunc,\n\tTexWrap,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tSpriteLoadSrc,\n\tSpriteLoadOpt,\n\tSpriteAtlasData,\n\tFontLoadOpt,\n\tGfxTexData,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tGameObj,\n\tEventCanceller,\n\tSceneID,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tTouchID,\n\tCollision,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tOrigin,\n\tOriginComp,\n\tLayerComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tOutviewCompOpt,\n\tOutviewComp,\n\tCleanupCompOpt,\n\tCleanupComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tArea,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tGfxTexture,\n\tSpriteAnimPlayOpt,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tSolidComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevel,\n\tLevelOpt,\n\tCursor,\n\tRecording,\n\tKaboom,\n} from \"./types\";\n\nimport FPSCounter from \"./fps\";\nimport Timer from \"./timer\";\n\n// @ts-ignore\nimport apl386Src from \"./assets/apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./assets/apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./assets/sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./assets/sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./assets/bean.png\";\n// @ts-ignore\nimport burpBytes from \"./assets/burp.mp3\";\n// @ts-ignore\nimport kaSrc from \"./assets/ka.png\";\n// @ts-ignore\nimport boomSrc from \"./assets/boom.png\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype DrawTextureOpt = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\ninterface GfxTexOpt {\n\tfilter?: TexFilter,\n\twrap?: TexWrap,\n}\n\n// translate these key names to a simpler version\nconst KEY_ALIAS = {\n\t\"ArrowLeft\": \"left\",\n\t\"ArrowRight\": \"right\",\n\t\"ArrowUp\": \"up\",\n\t\"ArrowDown\": \"down\",\n\t\" \": \"space\",\n};\n\n// according to https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nconst MOUSE_BUTTONS = [\n\t\"left\",\n\t\"middle\",\n\t\"right\",\n\t\"back\",\n\t\"forward\",\n];\n\n// don't trigger browser default event when these keys are pressed\nconst PREVENT_DEFAULT_KEYS = [\n\t\"space\",\n\t\"left\",\n\t\"right\",\n\t\"up\",\n\t\"down\",\n\t\"tab\",\n\t\"f1\",\n\t\"f2\",\n\t\"f3\",\n\t\"f4\",\n\t\"f5\",\n\t\"f6\",\n\t\"f7\",\n\t\"f8\",\n\t\"f9\",\n\t\"f10\",\n\t\"f11\",\n\t\"s\",\n];\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS = \" ☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■\";\n\n// audio gain range\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\n\n// audio speed range\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\n\n// audio detune range\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\nconst DEF_ORIGIN = \"topleft\";\nconst DEF_GRAVITY = 1600;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst DEF_FONT = \"apl386o\";\nconst DBG_FONT = \"sink\";\n\n// vertex format stride (vec3 pos, vec2 uv, vec4 color)\nconst STRIDE = 9;\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n]);\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"load\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n]);\n\n// transform the button state to the next state\n// e.g. a button might become \"pressed\" one frame, and it should become \"down\" next frame\nfunction processButtonState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\n// wrappers around full screen functions to work across browsers\nfunction enterFullscreen(el: HTMLElement) {\n\tif (el.requestFullscreen) el.requestFullscreen();\n\t// @ts-ignore\n\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n};\n\nfunction exitFullscreen() {\n\tif (document.exitFullscreen) document.exitFullscreen();\n\t// @ts-ignore\n\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n};\n\nfunction getFullscreenElement(): Element | void {\n\treturn document.fullscreenElement\n\t\t// @ts-ignore\n\t\t|| document.webkitFullscreenElement\n\t\t;\n};\n\n// convert origin string to a vec2 offset\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction createEmptyAudioBuffer() {\n\treturn new AudioBuffer({\n\t\tlength: 1,\n\t\tnumberOfChannels: 1,\n\t\tsampleRate: 44100\n\t});\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\nconst app = (() => {\n\n\tconst root = gopt.root ?? document.body;\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\troot.appendChild(canvas);\n\t\treturn canvas;\n\t})();\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1;\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox) {\n\t\tcanvas.width = gopt.width * gscale;\n\t\tcanvas.height = gopt.height * gscale;\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth;\n\t\tcanvas.height = canvas.parentElement.offsetHeight;\n\t}\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gopt.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// TODO: .style is supposed to be readonly? alternative?\n\t// @ts-ignore\n\tcanvas.style = styles.join(\";\");\n\n\t// make canvas focusable\n\tcanvas.setAttribute(\"tabindex\", \"0\");\n\n\t// create webgl context\n\tconst gl = canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\treturn {\n\n\t\tcanvas: canvas,\n\t\tscale: gscale,\n\t\tgl: gl,\n\n\t\t// keep track of all button states\n\t\tkeyStates: {} as Record<Key, ButtonState>,\n\t\tmouseStates: {} as Record<MouseButton, ButtonState>,\n\n\t\t// input states from last frame, should reset every frame\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tisKeyPressed: false,\n\t\tisKeyPressedRepeat: false,\n\t\tisKeyReleased: false,\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\n\t\t// total time elapsed\n\t\ttime: 0,\n\t\t// real total time elapsed (including paused time)\n\t\trealTime: 0,\n\t\t// if we should skip next dt, to prevent the massive dt surge if user switch to another tab for a while and comeback\n\t\tskipTime: false,\n\t\t// how much time last frame took\n\t\tdt: 0.0,\n\t\t// total frames elapsed\n\t\tnumFrames: 0,\n\n\t\t// if we're on a touch device\n\t\tisTouch: (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0,\n\n\t\t// requestAnimationFrame id\n\t\tloopID: null,\n\t\t// if our game loop is currently stopped / paused\n\t\tstopped: false,\n\t\tpaused: false,\n\n\t\t// TODO: take fps counter out pure\n\t\tfpsCounter: new FPSCounter(),\n\n\t\t// if we finished loading all assets\n\t\tloaded: false,\n\n\t};\n\n})();\n\nconst gfx = (() => {\n\n\tconst gl = app.gl;\n\tconst defShader = makeShader(DEF_VERT, DEF_FRAG);\n\n\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\tconst emptyTex = makeTex(\n\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t);\n\n\tconst c = gopt.background ?? rgb(0, 0, 0);\n\n\tif (gopt.background) {\n\t\tconst c = Color.fromArray(gopt.background);\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, gopt.background[3] ?? 1);\n\t}\n\n\tgl.enable(gl.BLEND);\n\tgl.enable(gl.SCISSOR_TEST);\n\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t// we only use one vertex and index buffer that batches all draw calls\n\tconst vbuf = gl.createBuffer();\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t// vec3 pos\n\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\tgl.enableVertexAttribArray(0);\n\t// vec2 uv\n\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\tgl.enableVertexAttribArray(1);\n\t// vec4 color\n\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\tgl.enableVertexAttribArray(2);\n\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\tconst ibuf = gl.createBuffer();\n\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t// a checkerboard texture used for the default background\n\tconst bgTex = makeTex(\n\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t128, 128, 128, 255,\n\t\t\t190, 190, 190, 255,\n\t\t\t190, 190, 190, 255,\n\t\t\t128, 128, 128, 255,\n\t\t]), 2, 2), {\n\t\t\twrap: \"repeat\",\n\t\t\tfilter: \"nearest\",\n\t\t},\n\t);\n\n\treturn {\n\n\t\t// keep track of how many draw calls we're doing this frame\n\t\tdrawCalls: 0,\n\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\tlastDrawCalls: 0,\n\n\t\t// gfx states\n\t\tdefShader: defShader,\n\t\tcurShader: defShader,\n\t\tdefTex: emptyTex,\n\t\tcurTex: emptyTex,\n\t\tcurUniform: {},\n\t\tvbuf: vbuf,\n\t\tibuf: ibuf,\n\n\t\t// local vertex / index buffer queue\n\t\tvqueue: [],\n\t\tiqueue: [],\n\n\t\ttransform: new Mat4(),\n\t\ttransformStack: [],\n\n\t\tbgTex: bgTex,\n\n\t\twidth: gopt.width,\n\t\theight: gopt.height,\n\n\t\tviewport: {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: gl.drawingBufferWidth,\n\t\t\theight: gl.drawingBufferHeight,\n\t\t},\n\n\t};\n\n})();\n\nupdateViewport();\n\nconst audio = (() => {\n\n\t// TODO: handle when audio context is unavailable\n\tconst ctx = new (window.AudioContext || (window as any).webkitAudioContext)() as AudioContext\n\tconst masterNode = ctx.createGain();\n\tmasterNode.connect(ctx.destination);\n\n\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\tconst burpSnd = {\n\t\tbuf: createEmptyAudioBuffer(),\n\t};\n\n\t// load that burp sound\n\tctx.decodeAudioData(burpBytes.buffer.slice(0), (buf) => {\n\t\tburpSnd.buf = buf;\n\t}, () => {\n\t\tthrow new Error(\"Failed to load burp.\")\n\t});\n\n\treturn {\n\t\tctx,\n\t\tmasterNode,\n\t\tburpSnd,\n\t};\n\n})();\n\nconst assets = {\n\n\t// keep track of how many assets are loading / loaded, for calculaating progress\n\tnumLoading: 0,\n\tnumLoaded: 0,\n\n\t// prefix for when loading from a url\n\turlPrefix: \"\",\n\n\t// asset holders\n\tsprites: {},\n\tsounds: {},\n\tshaders: {},\n\tfonts: {},\n\n};\n\nconst game = {\n\n\t// event callbacks\n\tevents: {},\n\tobjEvents: {},\n\n\t// root game object\n\t// these transforms are used as camera\n\troot: make([]),\n\n\ttimers: new IDList<Timer>(),\n\n\t// misc\n\tlayers: {},\n\tdefLayer: null,\n\tgravity: DEF_GRAVITY,\n\ton<F>(ev: string, cb: F): EventCanceller {\n\t\tif (!this.events[ev]) {\n\t\t\tthis.events[ev] = new IDList();\n\t\t}\n\t\treturn this.events[ev].pushd(cb);\n\t},\n\ttrigger(ev: string, ...args) {\n\t\tif (this.events[ev]) {\n\t\t\tthis.events[ev].forEach((cb) => cb(...args));\n\t\t}\n\t},\n\tscenes: {},\n\n\t// on screen log\n\tlogs: [],\n\n\t// camera\n\tcam: {\n\t\tpos: center(),\n\t\tscale: vec2(1),\n\t\tangle: 0,\n\t\tshake: 0,\n\t\ttransform: new Mat4(),\n\t},\n\n}\n\n// wrap individual loaders with global loader counter, for stuff like progress bar\nfunction load<T>(prom: Promise<T>): Promise<T> {\n\n\tassets.numLoading++;\n\n\t// wrapping another layer of promise because we are catching errors here internally and we also want users be able to catch errors, however only one catch is allowed per promise chain\n\treturn new Promise((resolve, reject) => {\n\t\tprom\n\t\t\t.then(resolve)\n\t\t\t.catch((err) => {\n\t\t\t\tdebug.error(err);\n\t\t\t\treject(err);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tassets.numLoading--;\n\t\t\t\tassets.numLoaded++;\n\t\t\t});\n\t}) as Promise<T>;\n\n}\n\n// get current load progress\nfunction loadProgress(): number {\n\treturn assets.numLoaded / (assets.numLoading + assets.numLoaded);\n}\n\n// global load path prefix\nfunction loadRoot(path?: string): string {\n\tif (path !== undefined) {\n\t\tassets.urlPrefix = path;\n\t}\n\treturn assets.urlPrefix;\n}\n\n// wrapper around fetch() that applies urlPrefix and basic error handling\nfunction fetchURL(path: string) {\n\tconst url = assets.urlPrefix + path;\n\treturn fetch(url)\n\t\t.then((res) => {\n\t\t\tif (!res.ok) {\n\t\t\t\tthrow new Error(`Failed to fetch ${url}`);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n}\n\n// wrapper around image loader to get a Promise\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = isDataURL(src) ? src : assets.urlPrefix + src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => resolve(img);\n\t\t// TODO: truncate for long dataurl src\n\t\timg.onerror = () => reject(`Failed to load image from \"${src}\"`);\n\t});\n}\n\n// TODO: support SpriteLoadSrc\nfunction loadFont(\n\tname: string | null,\n\tsrc: string,\n\tgw: number,\n\tgh: number,\n\topt: FontLoadOpt = {},\n): Promise<FontData> {\n\treturn load(loadImg(src)\n\t\t.then((img) => {\n\t\t\tconst font = makeFont(\n\t\t\t\tmakeTex(img, opt),\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t\topt.chars ?? ASCII_CHARS\n\t\t\t);\n\t\t\tif (name) {\n\t\t\t\tassets.fonts[name] = font;\n\t\t\t}\n\t\t\treturn font;\n\t\t})\n\t);\n}\n\nfunction getSprite(name: string): SpriteData | null {\n\treturn assets.sprites[name] ?? null;\n}\n\nfunction getSound(name: string): SoundData | null {\n\treturn assets.sounds[name] ?? null;\n}\n\nfunction getFont(name: string): FontData | null {\n\treturn assets.fonts[name] ?? null;\n}\n\nfunction getShader(name: string): ShaderData | null {\n\treturn assets.shaders[name] ?? null;\n}\n\n// get an array of frames based on configuration on how to slice the image\nfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\tconst frames = [];\n\tconst qw = w / x;\n\tconst qh = h / y;\n\tfor (let j = 0; j < y; j++) {\n\t\tfor (let i = 0; i < x; i++) {\n\t\t\tframes.push(new Quad(\n\t\t\t\tdx + i * qw,\n\t\t\t\tdy + j * qh,\n\t\t\t\tqw,\n\t\t\t\tqh,\n\t\t\t));\n\t\t}\n\t}\n\treturn frames;\n}\n\nfunction loadSpriteAtlas(\n\tsrc: SpriteLoadSrc,\n\tdata: SpriteAtlasData | string\n): Promise<Record<string, SpriteData>> {\n\tif (typeof data === \"string\") {\n\t\t// TODO: this adds a new loader asyncly\n\t\treturn load(fetchURL(data)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data2) => loadSpriteAtlas(src, data2)));\n\t}\n\treturn load(loadSprite(null, src).then((atlas) => {\n\t\tconst map = {};\n\t\tconst w = atlas.tex.width;\n\t\tconst h = atlas.tex.height;\n\t\tfor (const name in data) {\n\t\t\tconst info = data[name];\n\t\t\tconst spr = {\n\t\t\t\ttex: atlas.tex,\n\t\t\t\tframes: slice(info.sliceX, info.sliceY, info.x / w, info.y / h, info.width / w, info.height / h),\n\t\t\t\tanims: info.anims,\n\t\t\t}\n\t\t\tassets.sprites[name] = spr;\n\t\t\tmap[name] = spr;\n\t\t}\n\t\treturn map;\n\t}));\n}\n\n// synchronously load sprite from local pixel data\nfunction loadRawSprite(\n\tname: string | null,\n\tsrc: GfxTexData,\n\topt: SpriteLoadOpt = {}\n) {\n\n\tconst tex = makeTex(src, opt);\n\tconst frames = slice(opt.sliceX || 1, opt.sliceY || 1);\n\n\tconst sprite = {\n\t\ttex: tex,\n\t\tframes: frames,\n\t\tanims: opt.anims || {},\n\t};\n\n\tif (name) {\n\t\tassets.sprites[name] = sprite;\n\t}\n\n\treturn sprite;\n\n}\n\n// load a sprite to asset manager\nfunction loadSprite(\n\tname: string | null,\n\tsrc: SpriteLoadSrc,\n\topt: SpriteLoadOpt = {\n\t\tsliceX: 1,\n\t\tsliceY: 1,\n\t\tanims: {},\n\t},\n): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tif (!src) {\n\t\t\treturn reject(`Expected sprite src for \"${name}\"`);\n\t\t}\n\n\t\t// from url\n\t\tif (typeof(src) === \"string\") {\n\t\t\tloadImg(src)\n\t\t\t\t.then((img) => resolve(loadRawSprite(name, img, opt)))\n\t\t\t\t.catch(reject);\n\t\t} else {\n\t\t\tresolve(loadRawSprite(name, src, opt));\n\t\t}\n\n\t}));\n\n}\n\n// TODO: accept raw json\nfunction loadPedit(name: string, src: string): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tfetchURL(src)\n\t\t\t.then((res) => res.json())\n\t\t\t.then(async (data) => {\n\n\t\t\t\tconst images = await Promise.all(data.frames.map(loadImg));\n\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\tcanvas.width = data.width;\n\t\t\t\tcanvas.height = data.height * data.frames.length;\n\n\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\t\tctx.drawImage(img, 0, i * data.height);\n\t\t\t\t});\n\n\t\t\t\treturn loadSprite(name, canvas, {\n\t\t\t\t\tsliceY: data.frames.length,\n\t\t\t\t\tanims: data.anims,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t;\n\n\t}));\n\n}\n\n// TODO: accept raw json\nfunction loadAseprite(\n\tname: string | null,\n\timgSrc: SpriteLoadSrc,\n\tjsonSrc: string\n): Promise<SpriteData> {\n\n\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\tloadSprite(name, imgSrc)\n\t\t\t.then((sprite: SpriteData) => {\n\t\t\t\tfetchURL(jsonSrc)\n\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\tconst size = data.meta.size;\n\t\t\t\t\t\tsprite.frames = data.frames.map((f: any) => {\n\t\t\t\t\t\t\treturn new Quad(\n\t\t\t\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\t\t\t\tsprite.anims[anim.name] = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsprite.anims[anim.name] = {\n\t\t\t\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\t\t\t\t// TODO: let users define these\n\t\t\t\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(sprite);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject)\n\t\t\t\t\t;\n\t\t\t})\n\t\t\t.catch(reject);\n\n\t}));\n\n}\n\nfunction loadShader(\n\tname: string | null,\n\tvert?: string,\n\tfrag?: string,\n\tisUrl: boolean = false,\n): Promise<ShaderData> {\n\n\tfunction loadRawShader(\n\t\tname: string | null,\n\t\tvert: string | null,\n\t\tfrag: string | null,\n\t): ShaderData {\n\t\tconst shader = makeShader(vert, frag);\n\t\tif (name) {\n\t\t\tassets.shaders[name] = shader;\n\t\t}\n\t\treturn shader;\n\t}\n\n\treturn load(new Promise<ShaderData>((resolve, reject) => {\n\n\t\tif (!vert && !frag) {\n\t\t\treturn reject(\"no shader\");\n\t\t}\n\n\t\tfunction resolveUrl(url?: string) {\n\t\t\treturn url ?\n\t\t\t\tfetchURL(url)\n\t\t\t\t\t.then((res) => res.text())\n\t\t\t\t\t.catch(reject)\n\t\t\t\t: new Promise((r) => r(null));\n\t\t}\n\n\t\tif (isUrl) {\n\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t}\n\n\t}));\n\n}\n\n// TODO: accept dataurl\n// load a sound to asset manager\nfunction loadSound(\n\tname: string | null,\n\tsrc: string,\n): Promise<SoundData> {\n\n\treturn load(new Promise<SoundData>((resolve, reject) => {\n\n\t\tif (!src) {\n\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t}\n\n\t\t// from url\n\t\tif (typeof(src) === \"string\") {\n\t\t\tfetchURL(src)\n\t\t\t\t.then((res) => res.arrayBuffer())\n\t\t\t\t.then((data) => {\n\t\t\t\t\treturn new Promise((resolve2, reject2) =>\n\t\t\t\t\t\taudio.ctx.decodeAudioData(data, resolve2, reject2)\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\tconst snd = {\n\t\t\t\t\t\tbuf: buf,\n\t\t\t\t\t}\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tassets.sounds[name] = snd;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(snd);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t}\n\n\t}));\n\n}\n\nfunction loadBean(name: string = \"bean\"): Promise<SpriteData> {\n\treturn loadSprite(name, beanSrc);\n}\n\n// get / set master volume\nfunction volume(v?: number): number {\n\tif (v !== undefined) {\n\t\taudio.masterNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t}\n\treturn audio.masterNode.gain.value;\n}\n\n// plays a sound, returns a control handle\nfunction play(\n\tsrc: SoundData | string,\n\topt: AudioPlayOpt = {\n\t\tloop: false,\n\t\tvolume: 1,\n\t\tspeed: 1,\n\t\tdetune: 0,\n\t\tseek: 0,\n\t},\n): AudioPlay {\n\n\t// TODO: clean?\n\tif (typeof src === \"string\") {\n\n\t\tconst pb = play({\n\t\t\tbuf: createEmptyAudioBuffer(),\n\t\t});\n\n\t\tonLoad(() => {\n\t\t\tconst snd = assets.sounds[src];\n\t\t\tif (!snd) {\n\t\t\t\tthrow new Error(`Sound not found: \"${src}\"`);\n\t\t\t}\n\t\t\tconst pb2 = play(snd, opt);\n\t\t\tfor (const k in pb2) {\n\t\t\t\tpb[k] = pb2[k];\n\t\t\t}\n\t\t});\n\n\t\treturn pb;\n\n\t}\n\n\tconst ctx = audio.ctx;\n\tlet stopped = false;\n\tlet srcNode = ctx.createBufferSource();\n\n\tsrcNode.buffer = src.buf;\n\tsrcNode.loop = opt.loop ? true : false;\n\n\tconst gainNode = ctx.createGain();\n\n\tsrcNode.connect(gainNode);\n\tgainNode.connect(audio.masterNode);\n\n\tconst pos = opt.seek ?? 0;\n\n\tsrcNode.start(0, pos);\n\n\tlet startTime = ctx.currentTime - pos;\n\tlet stopTime: number | null = null;\n\n\tconst handle = {\n\n\t\tstop() {\n\t\t\tif (stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.pause();\n\t\t\tstartTime = ctx.currentTime;\n\t\t},\n\n\t\tplay(seek?: number) {\n\n\t\t\tif (!stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst oldNode = srcNode;\n\n\t\t\tsrcNode = ctx.createBufferSource();\n\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\tif (srcNode.detune) {\n\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t}\n\n\t\t\tsrcNode.connect(gainNode);\n\n\t\t\tconst pos = seek ?? this.time();\n\n\t\t\tsrcNode.start(0, pos);\n\t\t\tstartTime = ctx.currentTime - pos;\n\t\t\tstopped = false;\n\t\t\tstopTime = null;\n\n\t\t},\n\n\t\tpause() {\n\t\t\tif (stopped) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsrcNode.stop();\n\t\t\tstopped = true;\n\t\t\tstopTime = ctx.currentTime;\n\t\t},\n\n\t\tisPaused(): boolean {\n\t\t\treturn stopped;\n\t\t},\n\n\t\tpaused(): boolean {\n\t\t\tdeprecateMsg(\"paused()\", \"isPaused()\");\n\t\t\treturn this.isPaused();\n\t\t},\n\n\t\tisStopped(): boolean {\n\t\t\treturn stopped;\n\t\t},\n\n\t\tstopped(): boolean {\n\t\t\tdeprecateMsg(\"stopped()\", \"isStopped()\");\n\t\t\treturn this.isStopped();\n\t\t},\n\n\t\t// TODO: affect time()\n\t\tspeed(val?: number): number {\n\t\t\tif (val !== undefined) {\n\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t}\n\t\t\treturn srcNode.playbackRate.value;\n\t\t},\n\n\t\tdetune(val?: number): number {\n\t\t\tif (!srcNode.detune) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (val !== undefined) {\n\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t}\n\t\t\treturn srcNode.detune.value;\n\t\t},\n\n\t\tvolume(val?: number): number {\n\t\t\tif (val !== undefined) {\n\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t}\n\t\t\treturn gainNode.gain.value;\n\t\t},\n\n\t\tloop() {\n\t\t\tsrcNode.loop = true;\n\t\t},\n\n\t\tunloop() {\n\t\t\tsrcNode.loop = false;\n\t\t},\n\n\t\tduration(): number {\n\t\t\treturn src.buf.duration;\n\t\t},\n\n\t\ttime(): number {\n\t\t\tif (stopped) {\n\t\t\t\treturn stopTime - startTime;\n\t\t\t} else {\n\t\t\t\treturn ctx.currentTime - startTime;\n\t\t\t}\n\t\t},\n\n\t};\n\n\thandle.speed(opt.speed);\n\thandle.detune(opt.detune);\n\thandle.volume(opt.volume);\n\n\treturn handle;\n\n}\n\n// core kaboom logic\nfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\treturn play(audio.burpSnd, opt);\n}\n\n// TODO: take these webgl structures out pure\nfunction makeTex(\n\tdata: GfxTexData,\n\topt: GfxTexOpt = {}\n): GfxTexture {\n\n\tconst gl = app.gl;\n\tconst id = gl.createTexture();\n\n\tgl.bindTexture(gl.TEXTURE_2D, id);\n\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\tconst filter = (() => {\n\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\tdefault: return gl.NEAREST;\n\t\t}\n\t})();\n\n\tconst wrap = (() => {\n\t\tswitch (opt.wrap) {\n\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t}\n\t})();\n\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\treturn {\n\t\twidth: data.width,\n\t\theight: data.height,\n\t\tbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t},\n\t\tunbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t},\n\t};\n\n}\n\nfunction makeShader(\n\tvertSrc: string | null = DEF_VERT,\n\tfragSrc: string | null = DEF_FRAG,\n): GfxShader {\n\n\tconst gl = app.gl;\n\tlet msg;\n\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\tgl.shaderSource(vertShader, vcode);\n\tgl.shaderSource(fragShader, fcode);\n\tgl.compileShader(vertShader);\n\tgl.compileShader(fragShader);\n\n\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\tthrow new Error(msg);\n\t}\n\n\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\tthrow new Error(msg);\n\t}\n\n\tconst id = gl.createProgram();\n\n\tgl.attachShader(id, vertShader);\n\tgl.attachShader(id, fragShader);\n\n\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\tgl.linkProgram(id);\n\n\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\tif (msg !== \"\\n\") {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\treturn {\n\n\t\tbind() {\n\t\t\tgl.useProgram(id);\n\t\t},\n\n\t\tunbind() {\n\t\t\tgl.useProgram(null);\n\t\t},\n\n\t\tsend(uniform: Uniform) {\n\t\t\tthis.bind();\n\t\t\tfor (const name in uniform) {\n\t\t\t\tconst val = uniform[name];\n\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t} else if (val instanceof Vec3) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.unbind();\n\t\t},\n\n\t};\n\n}\n\nfunction makeFont(\n\ttex: GfxTexture,\n\tgw: number,\n\tgh: number,\n\tchars: string,\n): GfxFont {\n\n\tconst cols = tex.width / gw;\n\tconst rows = tex.height / gh;\n\tconst qw = 1.0 / cols;\n\tconst qh = 1.0 / rows;\n\tconst map: Record<string, Vec2> = {};\n\tconst charMap = chars.split(\"\").entries();\n\n\tfor (const [i, ch] of charMap) {\n\t\tmap[ch] = vec2(\n\t\t\t(i % cols) * qw,\n\t\t\tMath.floor(i / cols) * qh,\n\t\t);\n\t}\n\n\treturn {\n\t\ttex: tex,\n\t\tmap: map,\n\t\tqw: qw,\n\t\tqh: qh,\n\t};\n\n}\n\n// TODO: expose\nfunction drawRaw(\n\tverts: Vertex[],\n\tindices: number[],\n\tfixed: boolean,\n\ttex: GfxTexture = gfx.defTex,\n\tshader: GfxShader = gfx.defShader,\n\tuniform: Uniform = {},\n) {\n\n\ttex = tex ?? gfx.defTex;\n\tshader = shader ?? gfx.defShader;\n\n\t// flush on texture / shader change and overflow\n\tif (\n\t\ttex !== gfx.curTex\n\t\t|| shader !== gfx.curShader\n\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t) {\n\t\tflush();\n\t}\n\n\tfor (const v of verts) {\n\n\t\t// TODO: cache camTransform * gfxTransform?\n\t\tconst transform = fixed ? gfx.transform : game.cam.transform.mult(gfx.transform);\n\n\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\tconst pt = screen2ndc(transform.multVec2(v.pos.xy()));\n\n\t\tgfx.vqueue.push(\n\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\tv.uv.x, v.uv.y,\n\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t);\n\n\t}\n\n\tfor (const i of indices) {\n\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length);\n\t}\n\n\tgfx.curTex = tex;\n\tgfx.curShader = shader;\n\tgfx.curUniform = uniform;\n\n}\n\n// draw all batched shapes\nfunction flush() {\n\n\tif (\n\t\t!gfx.curTex\n\t\t|| !gfx.curShader\n\t\t|| gfx.vqueue.length === 0\n\t\t|| gfx.iqueue.length === 0\n\t) {\n\t\treturn;\n\t}\n\n\tconst gl = app.gl;\n\n\tgfx.curShader.send(gfx.curUniform);\n\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\tgfx.curShader.bind();\n\tgfx.curTex.bind();\n\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\tgfx.curTex.unbind();\n\tgfx.curShader.unbind();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\tgfx.iqueue = [];\n\tgfx.vqueue = [];\n\n\tgfx.drawCalls++;\n\n}\n\n// start a rendering frame, reset some states\nfunction frameStart() {\n\n\tapp.gl.clear(app.gl.COLOR_BUFFER_BIT);\n\n\tif (!gopt.background) {\n\t\tdrawUVQuad({\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tquad: new Quad(\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\twidth() * app.scale / BG_GRID_SIZE,\n\t\t\t\theight() * app.scale / BG_GRID_SIZE,\n\t\t\t),\n\t\t\ttex: gfx.bgTex,\n\t\t\tfixed: true,\n\t\t})\n\t}\n\n\tgfx.drawCalls = 0;\n\tgfx.transformStack = [];\n\tgfx.transform = new Mat4();\n\n}\n\nfunction frameEnd() {\n\tflush();\n\tgfx.lastDrawCalls = gfx.drawCalls;\n}\n\nfunction drawCalls() {\n\treturn gfx.lastDrawCalls;\n}\n\n// convert a screen space coordinate to webgl normalized device coordinate\nfunction screen2ndc(pt: Vec2): Vec2 {\n\treturn vec2(\n\t\tpt.x / width() * 2 - 1,\n\t\t-pt.y / height() * 2 + 1,\n\t);\n}\n\n// convert a webgl normalied device coordinate to screen space coordinate\nfunction ndc2screen(pt: Vec2): Vec2 {\n\treturn vec2(\n\t\t(pt.x + 1) / 2 * width(),\n\t\t-(pt.y - 1) / 2 * height(),\n\t);\n}\n\nfunction applyMatrix(m: Mat4) {\n\tgfx.transform = m.clone();\n}\n\nfunction pushTranslate(...args) {\n\tif (args[0] === undefined) return;\n\tconst p = vec2(...args);\n\tif (p.x === 0 && p.y === 0) return;\n\tgfx.transform = gfx.transform.translate(p);\n}\n\nfunction pushScale(...args) {\n\tif (args[0] === undefined) return;\n\tconst p = vec2(...args);\n\tif (p.x === 1 && p.y === 1) return;\n\tgfx.transform = gfx.transform.scale(p);\n}\n\nfunction pushRotateX(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateX(a);\n}\n\nfunction pushRotateY(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateY(a);\n}\n\nfunction pushRotateZ(a: number) {\n\tif (!a) {\n\t\treturn;\n\t}\n\tgfx.transform = gfx.transform.rotateZ(a);\n}\n\nfunction pushTransform() {\n\tgfx.transformStack.push(gfx.transform.clone());\n}\n\nfunction popTransform() {\n\tif (gfx.transformStack.length > 0) {\n\t\tgfx.transform = gfx.transformStack.pop();\n\t}\n}\n\n// draw a uv textured quad\nfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\tif (opt.width === undefined || opt.height === undefined) {\n\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t}\n\n\tif (opt.width <= 0 || opt.height <= 0) {\n\t\treturn;\n\t}\n\n\tconst w = opt.width;\n\tconst h = opt.height;\n\tconst origin = originPt(opt.origin || DEF_ORIGIN);\n\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\tconst q = opt.quad || new Quad(0, 0, 1, 1);\n\tconst color = opt.color || rgb(255, 255, 255);\n\tconst opacity = opt.opacity ?? 1;\n\n\tpushTransform();\n\tpushTranslate(opt.pos);\n\tpushRotateZ(opt.angle);\n\tpushScale(opt.scale);\n\tpushTranslate(offset);\n\n\tdrawRaw([\n\t\t{\n\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y : q.y + q.h),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y + q.h : q.y),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y + q.h : q.y),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t\t{\n\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y : q.y + q.h),\n\t\t\tcolor: color,\n\t\t\topacity: opacity,\n\t\t},\n\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform);\n\n\tpopTransform();\n\n}\n\n// TODO: clean\nfunction drawTexture(opt: DrawTextureOpt) {\n\n\tif (!opt.tex) {\n\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t}\n\n\tconst q = opt.quad ?? new Quad(0, 0, 1, 1);\n\tconst w = opt.tex.width * q.w;\n\tconst h = opt.tex.height * q.h;\n\tconst scale = vec2(1);\n\n\tif (opt.tiled) {\n\n\t\t// TODO: draw fract\n\t\tconst repX = Math.ceil((opt.width || w) / w);\n\t\tconst repY = Math.ceil((opt.height || h) / h);\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t// TODO: rotation\n\t\tfor (let i = 0; i < repX; i++) {\n\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\t...opt,\n\t\t\t\t\tpos: (opt.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\tquad: q,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} else {\n\n\t\t// TODO: should this ignore scale?\n\t\tif (opt.width && opt.height) {\n\t\t\tscale.x = opt.width / w;\n\t\t\tscale.y = opt.height / h;\n\t\t} else if (opt.width) {\n\t\t\tscale.x = opt.width / w;\n\t\t\tscale.y = scale.x;\n\t\t} else if (opt.height) {\n\t\t\tscale.y = opt.height / h;\n\t\t\tscale.x = scale.y;\n\t\t}\n\n\t\tdrawUVQuad({\n\t\t\t...opt,\n\t\t\t// @ts-ignore\n\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\ttex: opt.tex,\n\t\t\tquad: q,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\n// TODO: use native asset loader tracking\nconst loading = new Set();\n\nfunction drawSprite(opt: DrawSpriteOpt) {\n\n\tif (!opt.sprite) {\n\t\tthrow new Error(`drawSprite() requires property \"sprite\"`);\n\t}\n\n\tconst spr = findAsset(opt.sprite, assets.sprites);\n\n\tif (!spr) {\n\n\t\t// if passes a source url, we load it implicitly\n\t\tif (typeof opt.sprite === \"string\") {\n\t\t\tif (!loading.has(opt.sprite)) {\n\t\t\t\tloading.add(opt.sprite);\n\t\t\t\tloadSprite(opt.sprite, opt.sprite)\n\t\t\t\t\t.then((a) => loading.delete(opt.sprite));\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\tthrow new Error(`sprite not found: \"${opt.sprite}\"`);\n\t\t}\n\n\t}\n\n\tconst q = spr.frames[opt.frame ?? 0];\n\n\tif (!q) {\n\t\tthrow new Error(`frame not found: ${opt.frame ?? 0}`);\n\t}\n\n\tdrawTexture({\n\t\t...opt,\n\t\ttex: spr.tex,\n\t\tquad: q.scale(opt.quad || new Quad(0, 0, 1, 1)),\n\t\tuniform: opt.uniform,\n\t});\n\n}\n\n// generate vertices to form an arc\nfunction getArcPts(\n\tpos: Vec2,\n\tradiusX: number,\n\tradiusY: number,\n\tstart: number,\n\tend: number,\n\tres: number = 1,\n): Vec2[] {\n\n\t// normalize and turn start and end angles to radians\n\tstart = deg2rad(start % 360);\n\tend = deg2rad(end % 360);\n\tif (end <= start) end += Math.PI * 2;\n\n\t// TODO: better way to get this?\n\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\tconst step = (end - start) / nverts;\n\tconst pts = [];\n\n\t// calculate vertices\n\tfor (let a = start; a < end; a += step) {\n\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t}\n\n\t// doing this on the side due to possible floating point inaccuracy\n\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\treturn pts;\n\n}\n\nfunction drawRect(opt: DrawRectOpt) {\n\n\tif (opt.width === undefined || opt.height === undefined) {\n\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t}\n\n\tif (opt.width <= 0 || opt.height <= 0) {\n\t\treturn;\n\t}\n\n\tconst w = opt.width;\n\tconst h = opt.height;\n\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(1, 1);\n\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\tlet pts = [\n\t\tvec2(0, 0),\n\t\tvec2(w, 0),\n\t\tvec2(w, h),\n\t\tvec2(0, h),\n\t];\n\n\t// TODO: drawPolygon should handle generic rounded corners\n\tif (opt.radius) {\n\n\t\t// maxium radius is half the shortest side\n\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius);\n\n\t\tpts = [\n\t\t\tvec2(r, 0),\n\t\t\tvec2(w - r, 0),\n\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\tvec2(w, r),\n\t\t\tvec2(w, h - r),\n\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\tvec2(w - r, h),\n\t\t\tvec2(r, h),\n\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\tvec2(0, h - r),\n\t\t\tvec2(0, r),\n\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t];\n\n\t}\n\n\tdrawPolygon({ ...opt, offset, pts });\n\n}\n\nfunction drawLine(opt: DrawLineOpt) {\n\n\tconst { p1, p2 } = opt;\n\n\tif (!p1 || !p2) {\n\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t}\n\n\tconst w = opt.width || 1;\n\n\t// the displacement from the line end point to the corner point\n\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t// calculate the 4 corner points of the line polygon\n\tconst verts = [\n\t\tp1.sub(dis),\n\t\tp1.add(dis),\n\t\tp2.add(dis),\n\t\tp2.sub(dis),\n\t].map((p) => ({\n\t\tpos: vec3(p.x, p.y, 0),\n\t\tuv: vec2(0),\n\t\tcolor: opt.color ?? Color.WHITE,\n\t\topacity: opt.opacity ?? 1,\n\t}));\n\n\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform);\n\n}\n\nfunction drawLines(opt: DrawLinesOpt) {\n\n\tconst pts = opt.pts;\n\n\tif (!pts) {\n\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t}\n\n\tif (pts.length < 2) {\n\t\treturn;\n\t}\n\n\tif (opt.radius && pts.length >= 3) {\n\n\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t}\n\n\t\tconst radius = Math.min(opt.radius, minLen / 2);\n\n\t\tdrawLine({ ...opt, p1: pts[0], p2: pts[1], });\n\n\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\tconst p1 = pts[i];\n\t\t\tconst p2 = pts[i + 1];\n\t\t\tdrawLine({\n\t\t\t\t...opt,\n\t\t\t\tp1: p1,\n\t\t\t\tp2: p2,\n\t\t\t});\n\t\t}\n\n\t\tdrawLine({ ...opt, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t} else {\n\n\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\tdrawLine({\n\t\t\t\t...opt,\n\t\t\t\tp1: pts[i],\n\t\t\t\tp2: pts[i + 1],\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n\nfunction drawTriangle(opt: DrawTriangleOpt) {\n\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t}\n\treturn drawPolygon({\n\t\t...opt,\n\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t});\n}\n\n// TODO: origin\nfunction drawCircle(opt: DrawCircleOpt) {\n\n\tif (!opt.radius) {\n\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t}\n\n\tif (opt.radius === 0) {\n\t\treturn;\n\t}\n\n\tdrawEllipse({\n\t\t...opt,\n\t\tradiusX: opt.radius,\n\t\tradiusY: opt.radius,\n\t\tangle: 0,\n\t});\n\n}\n\n// TODO: use fan-like triangulation\nfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t}\n\n\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\treturn;\n\t}\n\n\tdrawPolygon({\n\t\t...opt,\n\t\tpts: getArcPts(\n\t\t\tvec2(0),\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\topt.start ?? 0,\n\t\t\topt.end ?? 360,\n\t\t\topt.resolution\n\t\t),\n\t\tradius: 0,\n\t});\n\n}\n\nfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\tif (!opt.pts) {\n\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n\t}\n\n\tconst npts = opt.pts.length;\n\n\tif (npts < 3) {\n\t\treturn;\n\t}\n\n\tpushTransform();\n\tpushTranslate(opt.pos);\n\tpushScale(opt.scale);\n\tpushRotateZ(opt.angle);\n\tpushTranslate(opt.offset);\n\n\tif (opt.fill !== false) {\n\n\t\tconst color = opt.color ?? Color.WHITE;\n\n\t\tconst verts = opt.pts.map((pt) => ({\n\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\tuv: vec2(0, 0),\n\t\t\tcolor: color,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}));\n\n\t\t// TODO: better triangulation\n\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t.flat();\n\n\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform);\n\n\t}\n\n\tif (opt.outline) {\n\t\tdrawLines({\n\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\tradius: opt.radius,\n\t\t\twidth: opt.outline.width,\n\t\t\tcolor: opt.outline.color,\n\t\t\tuniform: opt.uniform,\n\t\t\tfixed: opt.fixed,\n\t\t});\n\t}\n\n\tpopTransform();\n\n}\n\nfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n\tif (tr.angle) fchar.angle += tr.angle;\n\tif (tr.color) fchar.color = fchar.color.mult(tr.color);\n\tif (tr.opacity) fchar.opacity *= tr.opacity;\n}\n\n// TODO: escape\nconst TEXT_STYLE_RE = /\\[(?<text>[^\\]]*)\\]\\.(?<style>[\\w\\.]+)+/g;\n\nfunction compileStyledText(text: string): {\n\tcharStyleMap: Record<number, {\n\t\tlocalIdx: number,\n\t\tstyles: string[],\n\t}>,\n\ttext: string,\n} {\n\n\tconst charStyleMap = {};\n\t// get the text without the styling syntax\n\tconst renderText = text.replace(TEXT_STYLE_RE, \"$1\");\n\tlet idxOffset = 0;\n\n\t// put each styled char index into a map for easy access when iterating each char\n\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\tconst styles = match.groups.style.split(\".\");\n\t\tconst origIdx = match.index - idxOffset;\n\t\tfor (\n\t\t\tlet i = origIdx;\n\t\t\ti < match.index + match.groups.text.length;\n\t\t\ti++\n\t\t) {\n\t\t\tcharStyleMap[i] = {\n\t\t\t\tlocalIdx: i - origIdx,\n\t\t\t\tstyles: styles,\n\t\t\t};\n\t\t}\n\t\t// omit \"[\", \"]\", \".\" and the style text in the format string when calculating index\n\t\tidxOffset += 3 + match.groups.style.length;\n\t}\n\n\treturn {\n\t\tcharStyleMap: charStyleMap,\n\t\ttext: renderText,\n\t};\n\n}\n\nfunction findAsset<T>(src: string | T, lib: Record<string, T>, def?: string): T | undefined {\n\tif (src) {\n\t\treturn typeof src === \"string\" ? lib[src] : src;\n\t} else if (def) {\n\t\treturn lib[def];\n\t}\n}\n\n// format text and return a list of chars with their calculated position\nfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\tif (opt.text === undefined) {\n\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\");\n\t}\n\n\tconst font = findAsset(opt.font ?? gopt.font, assets.fonts, DEF_FONT);\n\n\tif (!font) {\n\t\tthrow new Error(`Font not found: ${opt.font}`);\n\t}\n\n\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\");\n\tconst chars = text.split(\"\");\n\tconst gw = font.qw * font.tex.width;\n\tconst gh = font.qh * font.tex.height;\n\tconst size = opt.size || gh;\n\tconst scale = vec2(size / gh).scale(vec2(opt.scale || 1));\n\tconst cw = scale.x * gw + (opt.letterSpacing ?? 0);\n\tconst ch = scale.y * gh + (opt.lineSpacing ?? 0);\n\tlet curX = 0;\n\tlet th = ch;\n\tlet tw = 0;\n\tconst flines = [];\n\tlet curLine = [];\n\tlet lastSpace = null;\n\tlet cursor = 0;\n\n\twhile (cursor < chars.length) {\n\n\t\tlet char = chars[cursor];\n\n\t\t// check new line\n\t\tif (char === \"\\n\") {\n\t\t\t// always new line on '\\n'\n\t\t\tth += ch;\n\t\t\tcurX = 0;\n\t\t\tlastSpace = null;\n\t\t\tcurLine.push(char);\n\t\t\tflines.push(curLine);\n\t\t\tcurLine = [];\n\t\t} else if ((opt.width ? (curX + cw > opt.width) : false)) {\n\t\t\t// new line on last word if width exceeds\n\t\t\tth += ch;\n\t\t\tcurX = 0;\n\t\t\tif (lastSpace != null) {\n\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\tchar = chars[cursor];\n\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t}\n\t\t\tlastSpace = null;\n\t\t\tflines.push(curLine);\n\t\t\tcurLine = [];\n\t\t}\n\n\t\t// push char\n\t\tif (char !== \"\\n\") {\n\t\t\tcurLine.push(char);\n\t\t\tcurX += cw;\n\t\t\tif (char === \" \") {\n\t\t\t\tlastSpace = curLine.length;\n\t\t\t}\n\t\t}\n\n\t\ttw = Math.max(tw, curX);\n\t\tcursor++;\n\n\t}\n\n\tflines.push(curLine);\n\n\tif (opt.width) {\n\t\ttw = opt.width;\n\t}\n\n\t// whole text offset\n\tconst fchars = [];\n\tconst pos = vec2(opt.pos || 0);\n\tconst offset = originPt(opt.origin || DEF_ORIGIN).scale(0.5);\n\t// this math is complicated i forgot how it works instantly\n\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\tlet idx = 0;\n\n\tflines.forEach((line, ln) => {\n\n\t\t// line offset\n\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\tline.forEach((char, cn) => {\n\t\t\tconst qpos = font.map[char];\n\t\t\tconst x = cn * cw;\n\t\t\tconst y = ln * ch;\n\t\t\tif (qpos) {\n\t\t\t\tconst fchar: FormattedChar = {\n\t\t\t\t\ttex: font.tex,\n\t\t\t\t\tquad: new Quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\tch: char,\n\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\topacity: opt.opacity,\n\t\t\t\t\tcolor: opt.color ?? rgb(255, 255, 255),\n\t\t\t\t\tscale: scale,\n\t\t\t\t\tangle: 0,\n\t\t\t\t\tuniform: opt.uniform,\n\t\t\t\t\tfixed: opt.fixed,\n\t\t\t\t}\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, char)\n\t\t\t\t\t\t: opt.transform;\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst { styles, localIdx } = charStyleMap[idx];\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name];\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(localIdx, char)\n\t\t\t\t\t\t\t: style;\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfchars.push(fchar);\n\t\t\t}\n\t\t\tidx += 1;\n\t\t});\n\t});\n\n\treturn {\n\t\twidth: tw,\n\t\theight: th,\n\t\tchars: fchars,\n\t};\n\n}\n\nfunction drawText(opt: DrawTextOpt) {\n\tdrawFormattedText(formatText(opt));\n}\n\n// TODO: rotation\nfunction drawFormattedText(ftext: FormattedText) {\n\tfor (const ch of ftext.chars) {\n\t\tdrawUVQuad({\n\t\t\ttex: ch.tex,\n\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\tpos: ch.pos,\n\t\t\tscale: ch.scale,\n\t\t\tangle: ch.angle,\n\t\t\tcolor: ch.color,\n\t\t\topacity: ch.opacity,\n\t\t\tquad: ch.quad,\n\t\t\t// TODO: topleft\n\t\t\torigin: \"center\",\n\t\t\tuniform: ch.uniform,\n\t\t\tfixed: ch.fixed,\n\t\t});\n\t}\n}\n\n/**\n * Update viewport based on user setting and fullscreen state\n */\nfunction updateViewport() {\n\n\tconst gl = app.gl;\n\n\t// canvas size\n\tconst cw = gl.drawingBufferWidth;\n\tconst ch = gl.drawingBufferHeight;\n\n\t// game size\n\tconst gw = width();\n\tconst gh = height();\n\n\tif (isFullscreen()) {\n\t\t// TODO: doesn't work with letterbox\n\t\tconst ww = window.innerWidth;\n\t\tconst wh = window.innerHeight;\n\t\tconst rw = ww / wh;\n\t\tconst rc = cw / ch;\n\t\tif (rw > rc) {\n\t\t\tconst sw = window.innerHeight * rc;\n\t\t\tgfx.viewport = {\n\t\t\t\tx: (ww - sw) / 2,\n\t\t\t\ty: 0,\n\t\t\t\twidth: sw,\n\t\t\t\theight: wh,\n\t\t\t};\n\t\t} else {\n\t\t\tconst sh = window.innerWidth / rc;\n\t\t\tgfx.viewport = {\n\t\t\t\tx: 0,\n\t\t\t\ty: (wh - sh) / 2,\n\t\t\t\twidth: ww,\n\t\t\t\theight: sh,\n\t\t\t};\n\t\t}\n\t\treturn;\n\t}\n\n\tif (gopt.letterbox) {\n\n\t\tif (!gopt.width || !gopt.height) {\n\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\");\n\t\t}\n\n\t\tconst rc = cw / ch;\n\t\tconst rg = gopt.width / gopt.height;\n\n\t\tif (rc > rg) {\n\t\t\tif (!gopt.stretch) {\n\t\t\t\tgfx.width = ch * rg;\n\t\t\t\tgfx.height = ch;\n\t\t\t}\n\t\t\tconst sw = ch * rg;\n\t\t\tconst sh = ch;\n\t\t\tconst x = (cw - sw) / 2;\n\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\tgl.viewport(x, 0, sw, ch);\n\t\t\tgfx.viewport = {\n\t\t\t\tx: x,\n\t\t\t\ty: 0,\n\t\t\t\twidth: sw,\n\t\t\t\theight: ch,\n\t\t\t};\n\t\t} else {\n\t\t\tif (!gopt.stretch) {\n\t\t\t\tgfx.width = cw;\n\t\t\t\tgfx.height = cw / rg;\n\t\t\t}\n\t\t\tconst sw = cw;\n\t\t\tconst sh = cw / rg;\n\t\t\tconst y = (ch - sh) / 2;\n\t\t\tgl.scissor(0, y, sw, sh);\n\t\t\tgl.viewport(0, y, cw, sh);\n\t\t\tgfx.viewport = {\n\t\t\t\tx: 0,\n\t\t\t\ty: y,\n\t\t\t\twidth: cw,\n\t\t\t\theight: sh,\n\t\t\t};\n\t\t}\n\n\t\treturn;\n\n\t}\n\n\tif (gopt.stretch) {\n\n\t\tif (!gopt.width || !gopt.height) {\n\t\t\tthrow new Error(\"Stretching requires width and height defined.\");\n\t\t}\n\n\t\tgl.viewport(0, 0, cw, ch);\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t};\n\n\t\treturn;\n\t}\n\n\tgfx.width = cw / app.scale;\n\tgfx.height = ch / app.scale;\n\tgl.viewport(0, 0, cw, ch);\n\n\tgfx.viewport = {\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: cw,\n\t\theight: ch,\n\t};\n\n}\n\n// get game width\nfunction width(): number {\n\treturn gfx.width;\n}\n\n// get game height\nfunction height(): number {\n\treturn gfx.height;\n}\n\n// TODO: support remove events\napp.canvas.addEventListener(\"mousemove\", (e) => {\n\tapp.mousePos = vec2(\n\t\t(e.offsetX - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t(e.offsetY - gfx.viewport.y) * height() / gfx.viewport.height,\n\t);\n\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\tapp.isMouseMoved = true;\n});\n\napp.canvas.addEventListener(\"mousedown\", (e) => {\n\tconst m = MOUSE_BUTTONS[e.button];\n\tif (m) {\n\t\tapp.mouseStates[m] = \"pressed\";\n\t}\n});\n\napp.canvas.addEventListener(\"mouseup\", (e) => {\n\tconst m = MOUSE_BUTTONS[e.button];\n\tif (m) {\n\t\tapp.mouseStates[m] = \"released\";\n\t}\n});\n\napp.canvas.addEventListener(\"keydown\", (e) => {\n\n\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n\n\tif (PREVENT_DEFAULT_KEYS.includes(k)) {\n\t\te.preventDefault();\n\t}\n\n\tif (k.length === 1) {\n\t\tapp.charInputted.push(e.key);\n\t}\n\n\tif (k === \"space\") {\n\t\tapp.charInputted.push(\" \");\n\t}\n\n\tif (e.repeat) {\n\t\tapp.isKeyPressedRepeat = true;\n\t\tapp.keyStates[k] = \"rpressed\";\n\t} else {\n\t\tapp.isKeyPressed = true;\n\t\tapp.keyStates[k] = \"pressed\";\n\t}\n\n});\n\napp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase();\n\tapp.keyStates[k] = \"released\";\n\tapp.isKeyReleased = true;\n});\n\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\t// disable long tap context menu\n\te.preventDefault();\n\tconst t = e.touches[0];\n\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\tapp.mouseStates[\"left\"] = \"pressed\";\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\t// disable scrolling\n\te.preventDefault();\n\tconst t = e.touches[0];\n\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\tapp.isMouseMoved = true;\n});\n\napp.canvas.addEventListener(\"touchend\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\tapp.mouseStates[\"left\"] = \"released\";\n});\n\napp.canvas.addEventListener(\"touchcancel\", (e) => {\n\tif (!gopt.touchToMouse) return;\n\tapp.mouseStates[\"left\"] = \"released\";\n});\n\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchStart\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchMove\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchend\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchEnd\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"contextmenu\", function (e) {\n\te.preventDefault();\n});\n\ndocument.addEventListener(\"visibilitychange\", () => {\n\tswitch (document.visibilityState) {\n\t\tcase \"visible\":\n\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\tapp.skipTime = true;\n\t\t\t// TODO: don't resume if debug.paused\n\t\t\taudio.ctx.resume();\n\t\t\tbreak;\n\t\tcase \"hidden\":\n\t\t\taudio.ctx.suspend();\n\t\t\tbreak;\n\t}\n});\n\n// TODO: not quite working\n// window.addEventListener(\"resize\", () => {\n// \tif (!(gopt.width && gopt.height && !gopt.stretch)) {\n// \t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n// \t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n// \t}\n// });\n\nfunction mousePos(): Vec2 {\n\treturn app.mousePos.clone();\n}\n\nfunction mouseDeltaPos(): Vec2 {\n\treturn app.mouseDeltaPos.clone();\n}\n\nfunction isMousePressed(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"pressed\";\n}\n\nfunction isMouseDown(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"pressed\" || app.mouseStates[m] === \"down\";\n}\n\nfunction isMouseReleased(m = \"left\"): boolean {\n\treturn app.mouseStates[m] === \"released\";\n}\n\nfunction isMouseMoved(): boolean {\n\treturn app.isMouseMoved;\n}\n\nfunction isKeyPressed(k?: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyPressed;\n\t} else {\n\t\treturn app.keyStates[k] === \"pressed\";\n\t}\n}\n\nfunction isKeyPressedRepeat(k: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyPressedRepeat;\n\t} else {\n\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t}\n}\n\nfunction isKeyDown(k: string): boolean {\n\treturn app.keyStates[k] === \"pressed\"\n\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t|| app.keyStates[k] === \"down\";\n}\n\nfunction isKeyReleased(k?: string): boolean {\n\tif (k === undefined) {\n\t\treturn app.isKeyReleased;\n\t} else {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n}\n\nfunction charInputted(): string[] {\n\treturn [...app.charInputted];\n}\n\nfunction time(): number {\n\treturn app.time;\n}\n\n// get a base64 png image of canvas\nfunction screenshot(): string {\n\treturn app.canvas.toDataURL();\n}\n\n// TODO: custom cursor\nfunction cursor(c?: Cursor): Cursor {\n\tif (c) {\n\t\tapp.canvas.style.cursor = c;\n\t}\n\treturn app.canvas.style.cursor;\n}\n\nfunction fullscreen(f: boolean = true) {\n\tif (f) {\n\t\tenterFullscreen(app.canvas);\n\t} else {\n\t\texitFullscreen();\n\t}\n}\n\nfunction isFullscreen(): boolean {\n\treturn Boolean(getFullscreenElement());\n}\n\nfunction quit() {\n\tcancelAnimationFrame(app.loopID);\n\tapp.stopped = true;\n}\n\nconst debug: Debug = {\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: () => app.fpsCounter.fps,\n\tobjCount(): number {\n\t\t// TODO: recursive count\n\t\treturn game.root.children.length;\n\t},\n\tstepFrame: updateFrame,\n\tdrawCalls: () => gfx.drawCalls,\n\tclearLog: () => game.logs = [],\n\tlog: (msg) => game.logs.unshift(`[${time().toFixed(2)}].time [${msg}].info`),\n\terror: (msg) => game.logs.unshift(`[${time().toFixed(2)}].time [${msg}].error`),\n\tcurRecording: null,\n\tget paused() {\n\t\treturn app.paused;\n\t},\n\tset paused(v) {\n\t\tapp.paused = v;\n\t\tif (v) {\n\t\t\taudio.ctx.suspend();\n\t\t} else {\n\t\t\taudio.ctx.resume();\n\t\t}\n\t}\n};\n\nfunction dt() {\n\treturn app.dt * debug.timeScale;\n}\n\nfunction mouseWorldPos(): Vec2 {\n\tdeprecateMsg(\"mouseWorldPos()\", \"toWorld(mousePos())\");\n\treturn toWorld(mousePos());\n}\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n};\n\ntype Layer = {\n\torder: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyEvent = {\n\tkey: string,\n\tcb(),\n};\n\ntype MouseInputEvent = {\n\tcb(),\n};\n\ntype LoadEvent = () => void;\ntype NextFrameEvent = () => void;\ntype MouseEvent = () => void;\ntype CharEvent = (ch: string) => void;\n\nfunction layers(list: string[], def?: string) {\n\n\tlist.forEach((name, idx) => {\n\t\tgame.layers[name] = idx + 1;\n\t});\n\n\tif (def) {\n\t\tgame.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tif (pos.length > 0) {\n\t\tgame.cam.pos = vec2(...pos);\n\t}\n\treturn game.cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tif (scale.length > 0) {\n\t\tgame.cam.scale = vec2(...scale);\n\t}\n\treturn game.cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tif (angle !== undefined) {\n\t\tgame.cam.angle = angle;\n\t}\n\treturn game.cam.angle;\n}\n\nfunction shake(intensity: number = 12) {\n\tgame.cam.shake = intensity;\n}\n\nfunction toScreen(p: Vec2): Vec2 {\n\treturn game.cam.transform.multVec2(p);\n}\n\nfunction toWorld(p: Vec2): Vec2 {\n\treturn game.cam.transform.invert().multVec2(p);\n}\n\nfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\tconst compStates = new Map();\n\tconst customState = {};\n\tlet events = {};\n\n\tconst obj = {\n\n\t\t_id: uid(),\n\t\thidden: false,\n\t\tpaused: false,\n\t\tchildren: [],\n\t\tparent: null,\n\n\t\t// TODO: accept gameobj\n\t\tadd<T2>(comps: CompList<T2>): GameObj<T2> {\n\t\t\tif (this !== game.root) {\n\t\t\t\tthrow new Error(\"Children game object not supported yet\");\n\t\t\t}\n\t\t\tconst obj = make(comps);\n\t\t\tobj.parent = this;\n\t\t\tobj.trigger(\"add\");\n\t\t\tonLoad(() => obj.trigger(\"load\"));\n\t\t\tthis.children.push(obj);\n\t\t\treturn obj;\n\t\t},\n\n\t\t// TODO: use add()\n\t\treadd(obj: GameObj): GameObj {\n\t\t\tthis.remove(obj);\n\t\t\tthis.children.push(obj);\n\t\t\treturn obj;\n\t\t},\n\n\t\tremove(obj: GameObj): void {\n\t\t\tconst idx = this.children.indexOf(obj);\n\t\t\tif (idx !== -1) {\n\t\t\t\tobj.parent = null;\n\t\t\t\tobj.trigger(\"destroy\");\n\t\t\t\tthis.children.splice(idx, 1);\n\t\t\t}\n\t\t},\n\n\t\tremoveAll(tag: Tag) {\n\t\t\tthis.every(tag, (obj) => this.remove(obj));\n\t\t},\n\n\t\tupdate() {\n\t\t\tif (this.paused) return;\n\t\t\tthis.revery((child) => child.update());\n\t\t\tthis.trigger(\"update\");\n\t\t},\n\n\t\tdraw() {\n\t\t\tif (this.hidden) return;\n\t\t\tpushTransform();\n\t\t\tpushTranslate(this.pos);\n\t\t\tpushScale(this.scale);\n\t\t\tpushRotateZ(this.angle);\n\t\t\tthis.every((child) => child.draw());\n\t\t\tthis.trigger(\"draw\");\n\t\t\tpopTransform();\n\t\t},\n\n\t\t// use a comp, or tag\n\t\tuse(comp: Comp | Tag) {\n\n\t\t\tif (!comp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// tag\n\t\t\tif (typeof comp === \"string\") {\n\t\t\t\treturn this.use({\n\t\t\t\t\tid: comp\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// clear if overwrite\n\t\t\tif (comp.id) {\n\t\t\t\tthis.unuse(comp.id);\n\t\t\t\tcompStates.set(comp.id, {});\n\t\t\t}\n\n\t\t\t// state source location\n\t\t\tconst state = comp.id ? compStates.get(comp.id) : customState;\n\n\t\t\tstate.cleanups = [];\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tconst func = comp[k].bind(this);\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\tstate.cleanups.push(this.on(k, func));\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate[k] = comp[k];\n\t\t\t\t}\n\n\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\tget: () => state[k],\n\t\t\t\t\t\tset: (val) => state[k] = val,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst checkDeps = () => {\n\t\t\t\tif (!comp.require) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\tthrow new Error(`comp '${comp.id}' requires comp '${dep}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// check deps or run add event\n\t\t\tif (this.exists()) {\n\t\t\t\tif (comp.add) {\n\t\t\t\t\tcomp.add.call(this);\n\t\t\t\t}\n\t\t\t\tif (comp.load) {\n\t\t\t\t\tonLoad(() => comp.load.call(this));\n\t\t\t\t}\n\t\t\t\tcheckDeps();\n\t\t\t} else {\n\t\t\t\tif (comp.require) {\n\t\t\t\t\tstate.cleanups.push(this.on(\"add\", checkDeps));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tunuse(id: Tag) {\n\t\t\tif (compStates.has(id)) {\n\t\t\t\tconst comp = compStates.get(id);\n\t\t\t\tcomp.cleanups.forEach((f) => f());\n\t\t\t\tfor (const k in comp) {\n\t\t\t\t\tdelete comp[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompStates.delete(id);\n\t\t},\n\n\t\tc(id: Tag): Comp {\n\t\t\treturn compStates.get(id);\n\t\t},\n\n\t\t// TODO: a recursive variant\n\t\tget(t?: Tag | Tag[]): GameObj[] {\n\t\t\treturn this.children\n\t\t\t\t.filter((child) => t ? child.is(t) : true)\n\t\t\t\t.sort((o1, o2) => {\n\t\t\t\t\t// TODO: layers are deprecated\n\t\t\t\t\tconst l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n\t\t\t\t\tconst l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\t\t\t\t\t// if on same layer, use \"z\" comp to decide which is on top, if given\n\t\t\t\t\tif (l1 == l2) {\n\t\t\t\t\t\treturn (o1.z ?? 0) - (o2.z ?? 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn l1 - l2;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\n\t\tevery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\t\t\tif (typeof t === \"function\" && f === undefined) {\n\t\t\t\treturn this.get().forEach((obj) => t(obj));\n\t\t\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\t\t\treturn this.get(t).forEach((obj) => f(obj));\n\t\t\t}\n\t\t},\n\n\t\trevery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\t\t\tif (typeof t === \"function\" && f === undefined) {\n\t\t\t\treturn this.get().reverse().forEach((obj) => t(obj));\n\t\t\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\t\t\treturn this.get(t).reverse().forEach((obj) => f(obj));\n\t\t\t}\n\t\t},\n\n\t\texists(): boolean {\n\t\t\tif (this.parent === game.root) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.parent?.exists();\n\t\t\t}\n\t\t},\n\n\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.c(tag) != null;\n\t\t\t}\n\t\t},\n\n\t\ton(ev: string, cb): EventCanceller {\n\t\t\tif (!events[ev]) {\n\t\t\t\tevents[ev] = new IDList();\n\t\t\t}\n\t\t\treturn events[ev].pushd(cb);\n\t\t},\n\n\t\taction(...args): EventCanceller {\n\t\t\tconsole.warn(\"action() is deprecated. Use onUpdate() instead\")\n\t\t\treturn this.onUpdate(...args);\n\t\t},\n\n\t\ttrigger(ev: string, ...args): void {\n\n\t\t\tif (events[ev]) {\n\t\t\t\tevents[ev].forEach((cb) => cb.call(this, ...args));\n\t\t\t}\n\n\t\t\tconst gEvents = game.objEvents[ev];\n\n\t\t\tif (gEvents) {\n\t\t\t\tgEvents.forEach((e) => {\n\t\t\t\t\tif (this.is(e.tag)) {\n\t\t\t\t\t\te.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy() {\n\t\t\tthis.parent?.remove(this);\n\t\t},\n\n\t\tinspect() {\n\t\t\tconst info = {};\n\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t\tonUpdate(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"update\", cb);\n\t\t},\n\n\t\tonDraw(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"draw\", cb);\n\t\t},\n\n\t\tonDestroy(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"destroy\", action);\n\t\t},\n\n\t\tclearEvents() {\n\t\t\tevents = {}\n\t\t},\n\n\t};\n\n\tfor (const comp of comps) {\n\t\tobj.use(comp);\n\t}\n\n\treturn obj as unknown as GameObj<T>;\n\n}\n\n// add an event to a tag\nfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventCanceller {\n\tif (!game.objEvents[event]) {\n\t\tgame.objEvents[event] = new IDList();\n\t}\n\treturn game.objEvents[event].pushd({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// add update event to a tag or global update\nfunction onUpdate(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn game.root.onUpdate(tag);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction onDraw(tag: Tag | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn game.root.onDraw(tag);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"draw\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction onCollide(\n\tt1: Tag,\n\tt2: Tag,\n\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n): EventCanceller {\n\tconst e1 = on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n\tconst e2 = on(\"collide\", t2, (a, b, col) => b.is(t1) && f(b, a, col));\n\tconst e3 = onUpdate(t1, (o1: GameObj) => {\n\t\tif (!o1.area) {\n\t\t\tthrow new Error(\"onCollide() requires the object to have area() component\");\n\t\t}\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n\treturn () => [e1, e2, e3].forEach((f) => f());\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction onClick(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\") {\n\t\treturn onMousePress(tag);\n\t} else {\n\t\treturn onUpdate(tag, (o: GameObj) => {\n\t\t\tif (!o.area) throw new Error(\"onClick() requires the object to have area() component\");\n\t\t\tif (o.isClicked()) {\n\t\t\t\tcb(o);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// add an event that runs when objs with tag t is hovered\nfunction onHover(t: string, onHover: (obj: GameObj) => void, onNotHover?: (obj: GameObj) => void): EventCanceller {\n\treturn onUpdate(t, (o: GameObj) => {\n\t\tif (!o.area) throw new Error(\"onHover() requires the object to have area() component\");\n\t\tif (o.isHovering()) {\n\t\t\tonHover(o);\n\t\t} else {\n\t\t\tif (onNotHover) {\n\t\t\t\tonNotHover(o);\n\t\t\t}\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tgame.timers.push(new Timer(t, () => {\n\t\t\tif (f) f();\n\t\t\tresolve();\n\t\t}))\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): EventCanceller {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn () => stopped = true;\n\n}\n\n// input callbacks\nfunction onKeyDown(k: Key | Key[], f: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyDown(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} {\n\t\treturn game.on(\"input\", () => isKeyDown(k) && f());\n\t}\n}\n\nfunction onKeyPress(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPress(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyPressed(k) && f());\n\t}\n}\n\nfunction onKeyPressRepeat(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPressRepeat(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyPressedRepeat(k) && f());\n\t}\n}\n\nfunction onKeyRelease(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyRelease(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => isKeyReleased() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => isKeyReleased(k) && f());\n\t}\n}\n\nfunction onMouseDown(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMouseDown() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMouseDown(m) && action(mousePos()));\n\t}\n}\n\nfunction onMousePress(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMousePressed() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMousePressed(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseRelease(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => isMouseReleased() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => isMouseReleased(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n\treturn game.on(\"input\", () => isMouseMoved() && f(mousePos(), mouseDeltaPos()));\n}\n\nfunction onCharInput(f: (ch: string) => void): EventCanceller {\n\treturn game.on(\"input\", () => charInputted().forEach((ch) => f(ch)));\n}\n\nfunction onTouchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchStart\", f);\n}\n\nfunction onTouchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchMove\", f);\n}\n\nfunction onTouchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchEnd\", f);\n}\n\nfunction enterDebugMode() {\n\n\tonKeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t});\n\n\tonKeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tonKeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t});\n\n\tonKeyPress(\"f7\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f9\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t});\n\n\tonKeyPress(\"f5\", () => {\n\t\tdownloadURL(screenshot(), \"kaboom.png\");\n\t});\n\n\tonKeyPress(\"f6\", () => {\n\t\tif (debug.curRecording) {\n\t\t\tdebug.curRecording.download();\n\t\t\tdebug.curRecording = null;\n\t\t} else {\n\t\t\tdebug.curRecording = record();\n\t\t}\n\t});\n\n}\n\nfunction enterBurpMode() {\n\tonKeyPress(\"b\", burp);\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tif (g !== undefined) {\n\t\tgame.gravity = g;\n\t}\n\treturn game.gravity;\n}\n\nfunction regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n\t// TODO\n}\n\nfunction makeCollision(target: GameObj<any>, dis: Vec2): Collision {\n\treturn {\n\t\ttarget: target,\n\t\tdisplacement: dis,\n\t\tisTop: () => dis.y > 0,\n\t\tisBottom: () => dis.y < 0,\n\t\tisLeft: () => dis.x > 0,\n\t\tisRight: () => dis.x < 0,\n\t};\n}\n\n// TODO: manage global velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tid: \"pos\",\n\t\tpos: vec2(...args),\n\n\t\t// TODO: clean\n\t\tmoveBy(...args): Collision | null {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tlet dx = p.x;\n\t\t\tlet dy = p.y;\n\t\t\tlet col = null;\n\n\t\t\tif (this.solid && this.area?.shape === \"rect\") {\n\n\t\t\t\tlet a1 = this.worldArea();\n\n\t\t\t\t// TODO: definitely shouln't iterate through all solid objs\n\t\t\t\tgame.root.every((other) => {\n\n\t\t\t\t\t// make sure we still exist, don't check with self, and only\n\t\t\t\t\t// check with other solid objects\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.exists()\n\t\t\t\t\t\t|| other === this\n\t\t\t\t\t\t|| !other.solid\n\t\t\t\t\t\t|| other.area?.shape !== \"rect\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst a2 = other.worldArea();\n\t\t\t\t\tlet md = minkDiff(a2, a1);\n\n\t\t\t\t\t// if they're already overlapping, push them away first\n\t\t\t\t\tif (testRectPoint(md, vec2(0))) {\n\n\t\t\t\t\t\tlet dist = Math.min(\n\t\t\t\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\t\t\t\tMath.abs(md.p2.y),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst res = (() => {\n\t\t\t\t\t\t\tswitch (dist) {\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tthis.pos = this.pos.sub(res);\n\n\t\t\t\t\t\t// calculate new mink diff\n\t\t\t\t\t\ta1 = this.worldArea();\n\t\t\t\t\t\tmd = minkDiff(a2, a1);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ray = { p1: vec2(0), p2: vec2(dx, dy) };\n\t\t\t\t\tlet minT = 1;\n\t\t\t\t\tconst p1 = md.p1;\n\t\t\t\t\tconst p2 = vec2(md.p1.x, md.p2.y);\n\t\t\t\t\tconst p3 = md.p2;\n\t\t\t\t\tconst p4 = vec2(md.p2.x, md.p1.y);\n\t\t\t\t\tlet numCols = 0;\n\t\t\t\t\tconst lines = {\n\t\t\t\t\t\t\"right\": { p1: p1, p2: p2, },\n\t\t\t\t\t\t\"top\": { p1: p2, p2: p3, },\n\t\t\t\t\t\t\"left\": { p1: p3, p2: p4, },\n\t\t\t\t\t\t\"bottom\": { p1: p4, p2: p1, },\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const s in lines) {\n\t\t\t\t\t\tconst line = lines[s];\n\t\t\t\t\t\t// if moving along a side, we forgive\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dx === 0 && line.p1.x === 0 && line.p2.x === 0)\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tminT = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = testLineLineT(ray, line);\n\t\t\t\t\t\tif (t != null) {\n\t\t\t\t\t\t\tnumCols++;\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if moving away, we forgive\n\t\t\t\t\tif (\n\t\t\t\t\t\tminT < 1\n\t\t\t\t\t\t&& !(minT === 0 && numCols == 1 && !testRectPoint(md, vec2(dx, dy)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst dis = vec2(-dx * (1 - minT), -dy * (1 - minT));\n\t\t\t\t\t\tdx *= minT;\n\t\t\t\t\t\tdy *= minT;\n\t\t\t\t\t\tcol = makeCollision(other, dis);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t\tif (col) {\n\t\t\t\tthis.trigger(\"collide\", col.target, col);\n\t\t\t\tcol.target.trigger(\"collide\", this, makeCollision(this, col.displacement.scale(-1)));\n\t\t\t}\n\n\t\t\treturn col;\n\n\t\t},\n\n\t\t// move with velocity (pixels per second)\n\t\tmove(...args): Collision | null {\n\t\t\treturn this.moveBy(vec2(...args).scale(dt()));\n\t\t},\n\n\t\t// move to a destination, with optional speed\n\t\tmoveTo(...args) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2]);\n\t\t\t}\n\t\t\tconst dest = args[0];\n\t\t\tconst speed = args[1];\n\t\t\tif (speed === undefined) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst diff = dest.sub(this.pos);\n\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.move(diff.unit().scale(speed));\n\t\t},\n\n\t\t// TODO\n\t\t// get the screen position (transformed by camera)\n\t\tscreenPos(): Vec2 {\n\t\t\tif (this.fixed) {\n\t\t\t\treturn this.pos;\n\t\t\t} else {\n\t\t\t\treturn toScreen(this.pos);\n\t\t\t}\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n\t\t},\n\n\t};\n\n};\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tid: \"scale\",\n\t\tscale: vec2(...args),\n\t\tscaleTo(...args) {\n\t\t\tthis.scale = vec2(...args);\n\t\t},\n\t\tinspect() {\n\t\t\tif (typeof this.scale === \"number\") {\n\t\t\t\treturn `${toFixed(this.scale, 2)}`;\n\t\t\t} else {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tid: \"rotate\",\n\t\tangle: r ?? 0,\n\t\tinspect() {\n\t\t\treturn `${Math.round(this.angle)}`;\n\t\t},\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tid: \"color\",\n\t\tcolor: rgb(...args),\n\t\tinspect() {\n\t\t\treturn this.color.str();\n\t\t},\n\t};\n}\n\nfunction toFixed(n: number, f: number) {\n\treturn Number(n.toFixed(f));\n}\n\nfunction opacity(a: number): OpacityComp {\n\treturn {\n\t\tid: \"opacity\",\n\t\topacity: a ?? 1,\n\t\tinspect() {\n\t\t\treturn `${toFixed(this.opacity, 2)}`;\n\t\t},\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\tif (!o) {\n\t\tthrow new Error(\"please define an origin\");\n\t}\n\treturn {\n\t\tid: \"origin\",\n\t\torigin: o,\n\t\tinspect() {\n\t\t\tif (typeof this.origin === \"string\") {\n\t\t\t\treturn this.origin;\n\t\t\t} else {\n\t\t\t\treturn this.origin.str();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tid: \"layer\",\n\t\tlayer: l,\n\t\tinspect() {\n\t\t\treturn this.layer ?? game.defLayer;\n\t\t},\n\t};\n}\n\nfunction z(z: number): ZComp {\n\treturn {\n\t\tid: \"z\",\n\t\tz: z,\n\t\tinspect() {\n\t\t\treturn `${this.z}`;\n\t\t},\n\t};\n}\n\nfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\treturn {\n\t\tid: \"follow\",\n\t\trequire: [ \"pos\", ],\n\t\tfollow: {\n\t\t\tobj: obj,\n\t\t\toffset: offset ?? vec2(0),\n\t\t},\n\t\tadd() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction move(dir: number | Vec2, speed: number): MoveComp {\n\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit();\n\treturn {\n\t\tid: \"move\",\n\t\trequire: [ \"pos\", ],\n\t\tupdate() {\n\t\t\tthis.move(d.scale(speed));\n\t\t},\n\t};\n}\n\nfunction outview(opt: OutviewCompOpt = {}): OutviewComp {\n\tlet timer = 0;\n\tlet isOut = false;\n\treturn {\n\t\tid: \"outview\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tisOutOfView(): boolean {\n\t\t\tconst offset = vec2(opt.offset ?? 0);\n\t\t\tconst screenRect = new Rect(\n\t\t\t\tvec2(0, 0).sub(offset),\n\t\t\t\tvec2(width(), height()).add(offset),\n\t\t\t);\n\t\t\treturn !testAreaRect(this.screenArea(), screenRect);\n\t\t},\n\t\tonExitView(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"exitView\", action);\n\t\t},\n\t\tonEnterView(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"enterView\", action);\n\t\t},\n\t\tupdate() {\n\t\t\tif (this.isOutOfView()) {\n\t\t\t\tif (!isOut) {\n\t\t\t\t\tthis.trigger(\"exitView\");\n\t\t\t\t\tisOut = true;\n\t\t\t\t}\n\t\t\t\tif (opt.delay) {\n\t\t\t\t\ttimer += dt();\n\t\t\t\t\tif (timer < opt.delay) return\n\t\t\t\t}\n\t\t\t\tif (opt.hide) this.hidden = true;\n\t\t\t\tif (opt.pause) this.paused = true;\n\t\t\t\tif (opt.destroy) this.destroy();\n\t\t\t} else {\n\t\t\t\tif (isOut) {\n\t\t\t\t\tthis.trigger(\"enterView\");\n\t\t\t\t\tisOut = false;\n\t\t\t\t}\n\t\t\t\ttimer = 0;\n\t\t\t\tif (opt.hide) this.hidden = false;\n\t\t\t\tif (opt.pause) this.paused = false;\n\t\t\t}\n\t\t},\n\t\tinspect() {\n\t\t\treturn this.isOutOfView();\n\t\t},\n\t};\n}\n\nfunction cleanup(opt: (number | undefined) | CleanupCompOpt = {}): CleanupComp {\n\tif (typeof opt === \"number\") {\n\t\tdeprecateMsg(\"clean(time)\", \"cleanup({ delay: time })\");\n\t\treturn {\n\t\t\t...outview({\n\t\t\t\tdestroy: true,\n\t\t\t\tdelay: opt,\n\t\t\t}),\n\t\t\tid: \"cleanup\",\n\t\t};\n\t}\n\treturn {\n\t\t...outview({\n\t\t\tdestroy: true,\n\t\t\tonExitView: opt.onCleanup,\n\t\t\toffset: opt.offset,\n\t\t\tdelay: opt.delay,\n\t\t}),\n\t\tid: \"cleanup\",\n\t};\n}\n\nfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\tconst colliding = {};\n\n\treturn {\n\n\t\tid: \"area\",\n\n\t\tadd() {\n\t\t\tif (this.area.cursor) {\n\t\t\t\t// TODO: collect\n\t\t\t\tthis.onHover(() => cursor(this.area.cursor));\n\t\t\t}\n\t\t},\n\n\t\tarea: {\n\t\t\tshape: \"rect\",\n\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\twidth: opt.width,\n\t\t\theight: opt.height,\n\t\t\tscale: opt.scale ?? vec2(1),\n\t\t\tcursor: opt.cursor,\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn isMousePressed() && this.isHovering();\n\t\t},\n\n\t\tisHovering() {\n\t\t\tconst mpos = this.fixed ? mousePos() : toWorld(mousePos());\n\t\t\treturn this.hasPoint(mpos);\n\t\t},\n\n\t\tisColliding(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testAreaArea(a1, a2);\n\t\t},\n\n\t\tisTouching(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// TODO: support other shapes\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testRectRect2(a1, a2);\n\t\t},\n\n\t\tonClick(f: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonHover(onHover: () => void, onNotHover: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\tonHover();\n\t\t\t\t} else {\n\t\t\t\t\tif (onNotHover) {\n\t\t\t\t\t\tonNotHover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonCollide(tag: Tag, f: (o: GameObj, col?: Collision) => void): EventCanceller {\n\t\t\tconst e1 = this.onUpdate(() => this._checkCollisions(tag, f));\n\t\t\tconst e2 = this.on(\"collide\", (obj, col) => obj.is(tag) && f(obj, col));\n\t\t\treturn () => [e1, e2].forEach((f) => f());\n\t\t},\n\n\t\tclicks(...args) {\n\t\t\tdeprecateMsg(\"clicks()\", \"onClick()\");\n\t\t\treturn this.onClick(...args);\n\t\t},\n\n\t\thovers(...args) {\n\t\t\tdeprecateMsg(\"hovers()\", \"onHover()\");\n\t\t\treturn this.onHover(...args);\n\t\t},\n\n\t\tcollides(...args) {\n\t\t\tdeprecateMsg(\"collides()\", \"onCollide()\");\n\t\t\treturn this.onCollide(...args);\n\t\t},\n\n\t\thasPoint(pt: Vec2): boolean {\n\t\t\treturn testAreaPoint(this.worldArea(), pt);\n\t\t},\n\n\t\t// push an obj out of another if they're overlapped\n\t\tpushOut(obj: GameObj): Vec2 | null {\n\n\t\t\tif (obj === this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: support other shapes\n\t\t\tif (obj.area?.shape !== \"rect\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = obj.worldArea();\n\t\t\tconst md = minkDiff(a1, a2);\n\n\t\t\tif (!testRectPoint(md, vec2(0))) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet dist = Math.min(\n\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\tMath.abs(md.p2.y),\n\t\t\t);\n\n\t\t\tconst res = (() => {\n\t\t\t\tswitch (dist) {\n\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tthis.pos = this.pos.add(res);\n\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tpushOutAll() {\n\t\t\tgame.root.every(this.pushOut);\n\t\t},\n\n\t\t// @ts-ignore\n\t\t_checkCollisions(tag: Tag) {\n\n\t\t\tgame.root.every(tag, (obj) => {\n\n\t\t\t\tif (this === obj || !this.exists() || colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isColliding(obj)) {\n\t\t\t\t\tthis.trigger(\"collide\", obj, null);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isColliding(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: doesn't work with nested parent transforms\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\tworldArea(): Area {\n\n\t\t\tlet w = this.area.width ?? this.width;\n\t\t\tlet h = this.area.height ?? this.height;\n\n\t\t\tif (w == null || h == null) {\n\t\t\t\tthrow new Error(\"failed to get area dimension\");\n\t\t\t}\n\n\t\t\tconst scale = vec2(this.scale ?? 1).scale(this.area.scale);\n\n\t\t\tw *= scale.x;\n\t\t\th *= scale.y;\n\n\t\t\tconst orig = originPt(this.origin || DEF_ORIGIN);\n\t\t\tconst pos = (this.pos ?? vec2(0))\n\t\t\t\t.add(this.area.offset)\n\t\t\t\t.sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n\t\t\treturn {\n\t\t\t\tshape: \"rect\",\n\t\t\t\tp1: pos,\n\t\t\t\tp2: vec2(pos.x + w, pos.y + h),\n\t\t\t};\n\n\t\t},\n\n\t\tscreenArea(): Area {\n\t\t\tconst area = this.worldArea();\n\t\t\tif (this.fixed) {\n\t\t\t\treturn area;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tshape: \"rect\",\n\t\t\t\t\tp1: toScreen(area.p1),\n\t\t\t\t\tp2: toScreen(area.p2),\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t};\n\n}\n\n// make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\nfunction getRenderProps(obj: GameObj<any>) {\n\treturn {\n\t\tcolor: obj.color,\n\t\topacity: obj.opacity,\n\t\torigin: obj.origin,\n\t\toutline: obj.outline,\n\t\tfixed: obj.fixed,\n\t\tshader: assets.shaders[obj.shader],\n\t\tuniform: obj.uniform,\n\t};\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// TODO: clean\nfunction sprite(id: string | SpriteData, opt: SpriteCompOpt = {}): SpriteComp {\n\n\tlet spr = null;\n\tlet curAnim: SpriteCurAnim | null = null;\n\n\tfunction calcTexScale(tex: GfxTexture, q: Quad, w?: number, h?: number): Vec2 {\n\t\tconst scale = vec2(1, 1);\n\t\tif (w && h) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t} else if (w) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = scale.x;\n\t\t} else if (h) {\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t\tscale.x = scale.y;\n\t\t}\n\t\treturn scale;\n\t}\n\n\treturn {\n\n\t\tid: \"sprite\",\n\t\t// TODO: allow update\n\t\twidth: 0,\n\t\theight: 0,\n\t\tframe: opt.frame || 0,\n\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\tanimSpeed: opt.animSpeed ?? 1,\n\n\t\tload() {\n\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tspr = assets.sprites[id];\n\t\t\t} else {\n\t\t\t\tspr = id;\n\t\t\t}\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tlet q = spr.frames[0].clone();\n\n\t\t\tif (opt.quad) {\n\t\t\t\tq = q.scale(opt.quad);\n\t\t\t}\n\n\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height);\n\n\t\t\tthis.width = spr.tex.width * q.w * scale.x;\n\t\t\tthis.height = spr.tex.height * q.h * scale.y;\n\n\t\t\tif (opt.anim) {\n\t\t\t\tthis.play(opt.anim);\n\t\t\t}\n\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawSprite({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tsprite: spr,\n\t\t\t\tframe: this.frame,\n\t\t\t\tquad: this.quad,\n\t\t\t\tflipX: opt.flipX,\n\t\t\t\tflipY: opt.flipY,\n\t\t\t\ttiled: opt.tiled,\n\t\t\t\twidth: opt.width,\n\t\t\t\theight: opt.height,\n\t\t\t});\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (anim.speed === 0) {\n\t\t\t\tthrow new Error(\"sprite anim speed cannot be 0\");\n\t\t\t}\n\n\t\t\tcurAnim.timer += dt() * this.animSpeed;\n\n\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\tcurAnim.timer = 0;\n\t\t\t\t// TODO: clean up\n\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame++;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: this opt should be used instead of the sprite data opt, if given\n\t\tplay(name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\tif (!spr) {\n\t\t\t\tonLoad(() => {\n\t\t\t\t\tthis.play(name, opt);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (anim == null) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\ttimer: 0,\n\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t};\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t} else {\n\t\t\t\tthis.frame = anim.from;\n\t\t\t}\n\n\t\t\t// TODO: \"animPlay\" is deprecated\n\t\t\tthis.trigger(\"animPlay\", name);\n\t\t\tthis.trigger(\"animStart\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tnumFrames() {\n\t\t\tif (!spr) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tflipX(b: boolean) {\n\t\t\topt.flipX = b;\n\t\t},\n\n\t\tflipY(b: boolean) {\n\t\t\topt.flipY = b;\n\t\t},\n\n\t\tonAnimEnd(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animEnd\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonAnimStart(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animStart\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tinspect() {\n\t\t\tlet msg = \"\";\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tmsg += JSON.stringify(id);\n\t\t\t} else {\n\t\t\t\tmsg += \"[blob]\";\n\t\t\t}\n\t\t\treturn msg;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\tconst ftext = formatText({\n\t\t\t...getRenderProps(obj),\n\t\t\ttext: obj.text + \"\",\n\t\t\tsize: obj.textSize,\n\t\t\tfont: obj.font,\n\t\t\twidth: opt.width && obj.width,\n\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\ttransform: obj.transform,\n\t\t\tstyles: obj.styles,\n\t\t});\n\n\t\tobj.width = ftext.width / (obj.scale?.x || 1);\n\t\tobj.height = ftext.height / (obj.scale?.y || 1);\n\n\t\treturn ftext;\n\n\t};\n\n\treturn {\n\n\t\tid: \"text\",\n\t\ttext: t,\n\t\ttextSize: opt.size,\n\t\tfont: opt.font,\n\t\twidth: opt.width,\n\t\theight: 0,\n\t\tlineSpacing: opt.lineSpacing,\n\t\tletterSpacing: opt.letterSpacing,\n\t\ttransform: opt.transform,\n\t\tstyles: opt.styles,\n\n\t\tload() {\n\t\t\tupdate(this);\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawFormattedText(update(this));\n\t\t},\n\n\t};\n\n}\n\nfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tradius: opt.radius || 0,\n\t\tdraw() {\n\t\t\tdrawRect({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction uvquad(w: number, h: number): UVQuadComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tdraw() {\n\t\t\tdrawUVQuad({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction circle(radius: number): CircleComp {\n\treturn {\n\t\tid: \"circle\",\n\t\tradius: radius,\n\t\tdraw() {\n\t\t\tdrawCircle({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.radius)}`;\n\t\t},\n\t};\n}\n\nfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\treturn {\n\t\tid: \"outline\",\n\t\toutline: {\n\t\t\twidth,\n\t\t\tcolor,\n\t\t},\n\t};\n}\n\nfunction timer(time?: number, action?: () => void): TimerComp {\n\tconst timers: IDList<Timer> = new IDList();\n\tif (time && action) {\n\t\ttimers.pushd(new Timer(time, action));\n\t}\n\treturn {\n\t\tid: \"timer\",\n\t\twait(time: number, action: () => void): EventCanceller {\n\t\t\treturn timers.pushd(new Timer(time, action));\n\t\t},\n\t\tupdate() {\n\t\t\ttimers.forEach((timer, id) => {\n\t\t\t\tif (timer.tick(dt())) {\n\t\t\t\t\ttimers.delete(id);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_JUMP_FORCE = 640;\nconst MAX_VEL = 65536;\n\n// TODO: land on wall\nfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tlet canDouble = true;\n\n\treturn {\n\n\t\tid: \"body\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\tweight: opt.weight ?? 1,\n\t\tsolid: opt.solid ?? true,\n\n\t\tupdate() {\n\n\t\t\tlet justFall = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\n\t\t\t\tconst a1 = this.worldArea();\n\t\t\t\tconst a2 = curPlatform.worldArea();\n\t\t\t\tconst y1 = a1.p2.y;\n\t\t\t\tconst y2 = a2.p1.y;\n\t\t\t\tconst x1 = a1.p1.x;\n\t\t\t\tconst x2 = a1.p2.x;\n\t\t\t\tconst x3 = a2.p1.x;\n\t\t\t\tconst x4 = a2.p2.x;\n\n\t\t\t\tif (\n\t\t\t\t\t!curPlatform.exists()\n\t\t\t\t\t|| y1 !== y2\n\t\t\t\t\t|| x2 < x3\n\t\t\t\t\t|| x1 > x4\n\t\t\t\t) {\n\t\t\t\t\tthis.trigger(\"fall\", curPlatform);\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustFall = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos && curPlatform.pos) {\n\t\t\t\t\t\t// TODO: moveBy?\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tconst col = this.move(0, velY);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tif (col) {\n\t\t\t\t\tif (col.isBottom()) {\n\t\t\t\t\t\tcurPlatform = col.target;\n\t\t\t\t\t\tconst oy = velY;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (curPlatform.pos) {\n\t\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!justFall) {\n\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform);\n\t\t\t\t\t\t\tcanDouble = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (col.isTop()) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvelY += gravity() * this.weight * dt();\n\t\t\t\tvelY = Math.min(velY, opt.maxVel ?? MAX_VEL);\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tisGrounded() {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\tdeprecateMsg(\"grounded()\", \"isGrounded()\");\n\t\t\treturn this.isGrounded();\n\t\t},\n\n\t\tisFalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\tdeprecateMsg(\"falling()\", \"isFalling()\");\n\t\t\treturn this.isFalling();\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tlastPlatformPos = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t\tdoubleJump(force: number) {\n\t\t\tif (this.isGrounded()) {\n\t\t\t\tthis.jump(force);\n\t\t\t} else if (canDouble) {\n\t\t\t\tcanDouble = false;\n\t\t\t\tthis.jump(force);\n\t\t\t\tthis.trigger(\"doubleJump\");\n\t\t\t}\n\t\t},\n\n\t\tonGround(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"ground\", action);\n\t\t},\n\n\t\tonFall(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"fall\", action);\n\t\t},\n\n\t\tonHeadbutt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"headbutt\", action);\n\t\t},\n\n\t\tonDoubleJump(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"doubleJump\", action);\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst shader = assets.shaders[id];\n\treturn {\n\t\tid: \"shader\",\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tid: \"solid\",\n\t\trequire: [ \"area\", ],\n\t\tsolid: true,\n\t};\n}\n\nfunction fixed(): FixedComp {\n\treturn {\n\t\tid: \"fixed\",\n\t\tfixed: true,\n\t};\n}\n\nfunction stay(): StayComp {\n\treturn {\n\t\tid: \"stay\",\n\t\tstay: true,\n\t};\n}\n\nfunction health(hp: number): HealthComp {\n\tif (hp == null) {\n\t\tthrow new Error(\"health() requires the initial amount of hp\");\n\t}\n\treturn {\n\t\tid: \"health\",\n\t\thurt(n: number = 1) {\n\t\t\tthis.setHP(hp - n);\n\t\t\tthis.trigger(\"hurt\");\n\t\t},\n\t\theal(n: number = 1) {\n\t\t\tthis.setHP(hp + n);\n\t\t\tthis.trigger(\"heal\");\n\t\t},\n\t\thp(): number {\n\t\t\treturn hp;\n\t\t},\n\t\tsetHP(n: number) {\n\t\t\thp = n;\n\t\t\tif (hp <= 0) {\n\t\t\t\tthis.trigger(\"death\");\n\t\t\t}\n\t\t},\n\t\tonHurt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"hurt\", action);\n\t\t},\n\t\tonHeal(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"heal\", action);\n\t\t},\n\t\tonDeath(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"death\", action);\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${hp}`;\n\t\t},\n\t};\n}\n\nfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\tif (time == null) {\n\t\tthrow new Error(\"lifespan() requires time\");\n\t}\n\tlet timer = 0;\n\tconst fade = opt.fade ?? 0;\n\tconst startFade = Math.max((time - fade), 0);\n\treturn {\n\t\tid: \"lifespan\",\n\t\tupdate() {\n\t\t\ttimer += dt();\n\t\t\t// TODO: don't assume 1 as start opacity\n\t\t\tif (timer >= startFade) {\n\t\t\t\tthis.opacity = map(timer, startFade, time, 1, 0);\n\t\t\t}\n\t\t\tif (timer >= time) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction state(\n\tinitState: string,\n\tstateList?: string[],\n\ttransitions?: Record<string, string | string[]>,\n): StateComp {\n\n\tif (!initState) {\n\t\tthrow new Error(\"state() requires an initial state\");\n\t}\n\n\tconst events = {};\n\n\tfunction initStateHook(state: string) {\n\t\tif (!events[state]) {\n\t\t\tevents[state] = {\n\t\t\t\tenter: [],\n\t\t\t\tleave: [],\n\t\t\t\tupdate: [],\n\t\t\t\tdraw: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction on(event, state, action) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].push(action);\n\t}\n\n\tfunction trigger(event, state, ...args) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].forEach((action) => action(...args));\n\t}\n\n\treturn {\n\n\t\tid: \"state\",\n\t\tstate: initState,\n\n\t\tenterState(state: string, ...args) {\n\n\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\tthrow new Error(`State not found: ${state}`);\n\t\t\t}\n\n\t\t\tconst oldState = this.state;\n\n\t\t\tif (transitions) {\n\n\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t: transitions[oldState] as string[];\n\n\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttrigger(\"leave\", oldState, ...args);\n\t\t\tthis.state = state;\n\t\t\ttrigger(\"enter\", state, ...args);\n\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args);\n\n\t\t},\n\n\t\tonStateTransition(from: string, to: string, action: () => void) {\n\t\t\ton(\"enter\", `${from} -> ${to}`, action);\n\t\t},\n\n\t\tonStateEnter(state: string, action: () => void) {\n\t\t\ton(\"enter\", state, action);\n\t\t},\n\n\t\tonStateUpdate(state: string, action: () => void) {\n\t\t\ton(\"update\", state, action);\n\t\t},\n\n\t\tonStateDraw(state: string, action: () => void) {\n\t\t\ton(\"draw\", state, action);\n\t\t},\n\n\t\tonStateLeave(state: string, action: () => void) {\n\t\t\ton(\"leave\", state, action);\n\t\t},\n\n\t\tupdate() {\n\t\t\ttrigger(\"update\", this.state);\n\t\t},\n\n\t\tdraw() {\n\t\t\ttrigger(\"draw\", this.state);\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn this.state;\n\t\t},\n\n\t};\n\n}\n\nfunction onLoad(cb: () => void): void {\n\tif (app.loaded) {\n\t\tcb();\n\t} else {\n\t\tgame.on(\"load\", cb);\n\t}\n}\n\nfunction scene(id: SceneID, def: SceneDef) {\n\tgame.scenes[id] = def;\n}\n\nfunction go(id: SceneID, ...args) {\n\n\tif (!game.scenes[id]) {\n\t\tthrow new Error(`scene not found: ${id}`);\n\t}\n\n\tconst cancel = game.on(\"updateStart\", () => {\n\n\t\tgame.events = {};\n\n\t\tgame.objEvents = {\n\t\t\tadd: new IDList(),\n\t\t\tupdate: new IDList(),\n\t\t\tdraw: new IDList(),\n\t\t\tdestroy: new IDList(),\n\t\t};\n\n\t\tgame.root.every((obj) => {\n\t\t\tif (!obj.is(\"stay\")) {\n\t\t\t\tgame.root.remove(obj);\n\t\t\t}\n\t\t})\n\n\t\tgame.root.clearEvents();\n\t\tgame.timers = new IDList();\n\n\t\t// cam\n\t\tgame.cam = {\n\t\t\tpos: center(),\n\t\t\tscale: vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t};\n\n\t\tgame.layers = {};\n\t\tgame.defLayer = null;\n\t\tgame.gravity = DEF_GRAVITY;\n\n\t\tgame.scenes[id](...args);\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode();\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode();\n\t\t}\n\n\t\tcancel();\n\n\t});\n\n}\n\nfunction getData<T>(key: string, def?: T): T {\n\ttry {\n\t\treturn JSON.parse(window.localStorage[key]);\n\t} catch {\n\t\tif (def) {\n\t\t\tsetData(key, def);\n\t\t\treturn def;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction setData(key: string, data: any) {\n\twindow.localStorage[key] = JSON.stringify(data);\n}\n\nfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\tconst funcs = plugin(ctx);\n\tfor (const k in funcs) {\n\t\t// @ts-ignore\n\t\tctx[k] = funcs[k];\n\t\tif (gopt.global !== false) {\n\t\t\t// @ts-ignore\n\t\t\twindow[k] = funcs[k];\n\t\t}\n\t}\n\treturn ctx as unknown as MergeObj<T> & KaboomCtx;\n}\n\nfunction center(): Vec2 {\n\treturn vec2(width() / 2, height() / 2);\n}\n\nfunction grid(level: Level, p: Vec2) {\n\n\treturn {\n\n\t\tid: \"grid\",\n\t\tgridPos: p.clone(),\n\n\t\tsetGridPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\tthis.gridPos = p.clone();\n\t\t\tthis.pos = vec2(\n\t\t\t\tlevel.offset().x + this.gridPos.x * level.gridWidth(),\n\t\t\t\tlevel.offset().y + this.gridPos.y * level.gridHeight()\n\t\t\t);\n\t\t},\n\n\t\tmoveLeft() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t},\n\n\t\tmoveRight() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t},\n\n\t\tmoveUp() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t},\n\n\t\tmoveDown() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t},\n\n\t};\n\n}\n\nfunction addLevel(map: string[], opt: LevelOpt): Level {\n\n\tif (!opt.width || !opt.height) {\n\t\tthrow new Error(\"Must provide level grid width & height.\");\n\t}\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(opt.pos || vec2(0));\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\toffset() {\n\t\t\treturn offset.clone();\n\t\t},\n\n\t\tgridWidth() {\n\t\t\treturn opt.width;\n\t\t},\n\n\t\tgridHeight() {\n\t\t\treturn opt.height;\n\t\t},\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, ...args): GameObj {\n\n\t\t\tconst p = vec2(...args);\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (opt[sym]) {\n\t\t\t\t\tif (typeof opt[sym] !== \"function\") {\n\t\t\t\t\t\tthrow new Error(\"level symbol def must be a function returning a component list\");\n\t\t\t\t\t}\n\t\t\t\t\treturn opt[sym](p);\n\t\t\t\t} else if (opt.any) {\n\t\t\t\t\treturn opt.any(sym, p);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst posComp = vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\n\t\t\tfor (const comp of comps) {\n\t\t\t\tif (comp.id === \"pos\") {\n\t\t\t\t\tposComp.x += comp.pos.x;\n\t\t\t\t\tposComp.y += comp.pos.y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomps.push(pos(posComp));\n\t\t\tcomps.push(grid(this, p));\n\n\t\t\tconst obj = game.root.add(comps);\n\n\t\t\tobjs.push(obj);\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * opt.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * opt.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tobj.destroy();\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nfunction record(frameRate?): Recording {\n\n\tconst stream = app.canvas.captureStream(frameRate);\n\tconst audioDest = audio.ctx.createMediaStreamDestination();\n\n\taudio.masterNode.connect(audioDest)\n\n\tconst audioStream = audioDest.stream;\n\tconst [firstAudioTrack] = audioStream.getAudioTracks();\n\n\t// TODO: Enabling audio results in empty video if no audio received\n\t// stream.addTrack(firstAudioTrack);\n\n\tconst recorder = new MediaRecorder(stream);\n\tconst chunks = [];\n\n\trecorder.ondataavailable = (e) => {\n\t\tif (e.data.size > 0) {\n\t\t\tchunks.push(e.data);\n\t\t}\n\t};\n\n\trecorder.onerror = (e) => {\n\t\taudio.masterNode.disconnect(audioDest)\n\t\tstream.getTracks().forEach(t => t.stop());\n\t};\n\n\trecorder.start();\n\n\treturn {\n\n\t\tresume() {\n\t\t\trecorder.resume();\n\t\t},\n\n\t\tpause() {\n\t\t\trecorder.pause();\n\t\t},\n\n\t\tdownload(filename = \"kaboom.mp4\") {\n\n\t\t\trecorder.onstop = () => {\n\t\t\t\tdownloadBlob(new Blob(chunks, {\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t}), filename);\n\t\t\t}\n\n\t\t\trecorder.stop();\n\t\t\t// cleanup\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\n\t\t},\n\n\t};\n\n}\n\nfunction focus() {\n\tdeprecateMsg(\"focus()\", \"canvas.focus()\");\n\tapp.canvas.focus();\n}\n\nfunction isFocused(): boolean {\n\treturn document.activeElement === app.canvas;\n}\n\ninterface BoomOpt {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\n// aliases for root game obj operations\nfunction add<T>(comps: CompList<T>): GameObj<T> {\n\treturn game.root.add(comps);\n}\n\nfunction readd<T>(obj: GameObj<T>): GameObj<T> {\n\treturn game.root.readd(obj);\n}\n\nfunction destroy(obj: GameObj) {\n\treturn game.root.remove(obj);\n}\n\nfunction destroyAll(tag: Tag) {\n\treturn game.root.removeAll(tag);\n}\n\nfunction get(...args) {\n\treturn game.root.get(...args);\n}\n\nfunction every(...args) {\n\t// @ts-ignore\n\treturn game.root.every(...args);\n}\n\nfunction revery(...args) {\n\t// @ts-ignore\n\treturn game.root.revery(...args);\n}\n\ninterface ExplodeComp extends Comp {\n}\n\nfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\tlet time = 0;\n\treturn {\n\t\tid: \"explode\",\n\t\trequire: [ \"scale\", ],\n\t\tupdate() {\n\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\tif (s < 0) {\n\t\t\t\tdestroy(this);\n\t\t\t}\n\t\t\tthis.scale = vec2(s);\n\t\t\ttime += dt();\n\t\t},\n\t};\n}\n\nlet kaSprite = null;\nlet boomSprite = null;\n\nloadSprite(null, kaSrc).then((spr) => kaSprite = spr);\nloadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n// TODO: use children obj\nfunction addKaboom(p: Vec2, opt: BoomOpt = {}): Kaboom {\n\n\tconst speed = (opt.speed || 1) * 5;\n\tconst s = opt.scale || 1;\n\n\tconst boom = add([\n\t\tpos(p),\n\t\tsprite(boomSprite),\n\t\tscale(0),\n\t\tstay(),\n\t\torigin(\"center\"),\n\t\texplode(speed, s),\n\t\t...(opt.boomComps ?? (() => []))(),\n\t]);\n\n\tconst ka = add([\n\t\tpos(p),\n\t\tsprite(kaSprite),\n\t\tscale(0),\n\t\tstay(),\n\t\torigin(\"center\"),\n\t\ttimer(0.4 / speed, () => ka.use(explode(speed, s))),\n\t\t...(opt.kaComps ?? (() => []))(),\n\t]);\n\n\treturn {\n\t\tdestroy() {\n\t\t\tdestroy(ka);\n\t\t\tdestroy(boom);\n\t\t},\n\t};\n\n}\n\nfunction frames() {\n\treturn app.numFrames;\n}\n\nfunction updateFrame() {\n\n\tgame.trigger(\"updateStart\");\n\n\t// update timers\n\tgame.timers.forEach((t, id) => {\n\t\tt.time -= dt();\n\t\tif (t.time <= 0) {\n\t\t\t// TODO: some timer action causes crash on FF when dt is really high, not sure why\n\t\t\tt.action();\n\t\t\tgame.timers.delete(id);\n\t\t}\n\t});\n\n\t// update every obj\n\tgame.root.update();\n\n}\n\nfunction drawFrame() {\n\n\t// calculate camera matrix\n\tconst cam = game.cam;\n\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tcam.transform = new Mat4()\n\t\t.translate(center())\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(cam.pos.scale(-1).add(shake))\n\t\t;\n\n\tgame.root.draw();\n\n}\n\nfunction drawLoadScreen() {\n\n\t// if assets are not fully loaded, draw a progress bar\n\tconst progress = loadProgress();\n\n\tif (progress === 1) {\n\t\tapp.loaded = true;\n\t\tgame.trigger(\"load\");\n\t} else {\n\n\t\tconst w = width() / 2;\n\t\tconst h = 24 / app.scale;\n\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n\t\tdrawRect({\n\t\t\tpos: vec2(0),\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t});\n\n\t\tdrawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tfill: false,\n\t\t\toutline: {\n\t\t\t\twidth: 4 / app.scale,\n\t\t\t},\n\t\t});\n\n\t\tdrawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w * progress,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\nfunction drawInspectText(pos, txt) {\n\n\tconst pad = vec2(8);\n\n\tpushTransform();\n\tpushTranslate(pos);\n\tpushScale(1 / app.scale);\n\n\tconst ftxt = formatText({\n\t\ttext: txt,\n\t\tfont: assets.fonts[DBG_FONT],\n\t\tsize: 16,\n\t\tpos: pad,\n\t\tcolor: rgb(255, 255, 255),\n\t\tfixed: true,\n\t});\n\n\tconst bw = ftxt.width + pad.x * 2;\n\tconst bh = ftxt.height + pad.x * 2;\n\n\tif (pos.x + bw / app.scale >= width()) {\n\t\tpushTranslate(vec2(-bw, 0));\n\t}\n\n\tif (pos.y + bh / app.scale >= height()) {\n\t\tpushTranslate(vec2(0, -bh));\n\t}\n\n\tdrawRect({\n\t\twidth: bw,\n\t\theight: bh,\n\t\tcolor: rgb(0, 0, 0),\n\t\tradius: 4,\n\t\topacity: 0.8,\n\t\tfixed: true,\n\t});\n\n\tdrawFormattedText(ftxt);\n\tpopTransform();\n\n}\n\nfunction drawDebug() {\n\n\tif (debug.inspect) {\n\n\t\tlet inspecting = null;\n\t\tconst lcolor = Color.fromArray(gopt.inspectColor ?? [0, 0, 255]);\n\n\t\t// draw area outline\n\t\tgame.root.every((obj) => {\n\n\t\t\tif (!obj.area) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (obj.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovering()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 8 : 4);\n\t\t\tconst a = obj.worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tdrawRect({\n\t\t\t\tpos: a.p1,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\toutline: {\n\t\t\t\t\twidth: lwidth,\n\t\t\t\t\tcolor: lcolor,\n\t\t\t\t},\n\t\t\t\tfill: false,\n\t\t\t\tfixed: obj.fixed,\n\t\t\t});\n\n\t\t});\n\n\t\tif (inspecting) {\n\n\t\t\tconst lines = [];\n\t\t\tconst data = inspecting.inspect();\n\n\t\t\tfor (const tag in data) {\n\t\t\t\tif (data[tag]) {\n\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`);\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(`${tag}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectText(mousePos(), lines.join(\"\\n\"));\n\n\t\t}\n\n\t\tdrawInspectText(vec2(8 / app.scale), `FPS: ${debug.fps()}`);\n\n\t}\n\n\tif (debug.paused) {\n\n\t\t// top right corner\n\t\tpushTransform();\n\t\tpushTranslate(width(), 0);\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(-8, 8);\n\n\t\tconst size = 32;\n\n\t\t// bg\n\t\tdrawRect({\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\torigin: \"topright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// pause icon\n\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\tdrawRect({\n\t\t\t\twidth: 4,\n\t\t\t\theight: size * 0.6,\n\t\t\t\torigin: \"center\",\n\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tradius: 2,\n\t\t\t\tfixed: true,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.timeScale !== 1) {\n\n\t\t// bottom right corner\n\t\tpushTransform();\n\t\tpushTranslate(width(), height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(-8, -8);\n\n\t\tconst pad = 8;\n\n\t\t// format text first to get text size\n\t\tconst ftxt = formatText({\n\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tsize: 16,\n\t\t\tcolor: rgb(255, 255, 255),\n\t\t\tpos: vec2(-pad),\n\t\t\torigin: \"botright\",\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// bg\n\t\tdrawRect({\n\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\theight: ftxt.height + pad * 2,\n\t\t\torigin: \"botright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t\tfixed: true,\n\t\t});\n\n\t\t// fast forward / slow down icon\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst flipped = debug.timeScale < 1;\n\t\t\tdrawTriangle({\n\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t});\n\t\t}\n\n\t\t// text\n\t\tdrawFormattedText(ftxt);\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.curRecording) {\n\n\t\tpushTransform();\n\t\tpushTranslate(0, height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(24, -24);\n\n\t\tdrawCircle({\n\t\t\tradius: 12,\n\t\t\tcolor: rgb(255, 0, 0),\n\t\t\topacity: wave(0, 1, time() * 4),\n\t\t\tfixed: true,\n\t\t});\n\n\t\tpopTransform();\n\n\t}\n\n\tif (debug.showLog && game.logs.length > 0) {\n\n\t\tpushTransform();\n\t\tpushTranslate(0, height());\n\t\tpushScale(1 / app.scale);\n\t\tpushTranslate(8, -8);\n\n\t\tconst pad = 8;\n\t\tconst max = gopt.logMax ?? 1;\n\n\t\tif (game.logs.length > max) {\n\t\t\tgame.logs = game.logs.slice(0, max);\n\t\t}\n\n\t\tconst ftext = formatText({\n\t\t\ttext: game.logs.join(\"\\n\"),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tpos: vec2(pad, -pad),\n\t\t\torigin: \"botleft\",\n\t\t\tsize: 16,\n\t\t\twidth: width() * app.scale * 0.6,\n\t\t\tlineSpacing: pad / 2,\n\t\t\tfixed: true,\n\t\t\tstyles: {\n\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t},\n\t\t});\n\n\t\tdrawRect({\n\t\t\twidth: ftext.width + pad * 2,\n\t\t\theight: ftext.height + pad * 2,\n\t\t\torigin: \"botleft\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\tradius: 4,\n\t\t\topacity: 0.8,\n\t\t\tfixed: true,\n\t\t});\n\n\t\tdrawFormattedText(ftext);\n\t\tpopTransform();\n\n\t}\n\n}\n\nif (gopt.debug !== false) {\n\tenterDebugMode();\n}\n\nif (gopt.burp) {\n\tenterBurpMode();\n}\n\nwindow.addEventListener(\"error\", (e) => {\n\tdebug.error(`Error: ${e.error.message}`);\n\tquit();\n\trun(() => {\n\t\tif (loadProgress() === 1) {\n\t\t\tframeStart();\n\t\t\tdrawDebug();\n\t\t\tframeEnd();\n\t\t}\n\t});\n});\n\nfunction run(f: () => void) {\n\n\tconst frame = (t: number) => {\n\n\t\tif (document.visibilityState !== \"visible\") {\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\treturn;\n\t\t}\n\n\t\tconst realTime = t / 1000;\n\t\tconst realDt = realTime - app.realTime;\n\n\t\tapp.realTime = realTime;\n\n\t\tif (!app.skipTime) {\n\t\t\tapp.dt = realDt;\n\t\t\tapp.time += app.dt;\n\t\t\tapp.fpsCounter.tick(app.dt);\n\t\t}\n\n\t\tapp.skipTime = false;\n\t\tapp.numFrames++;\n\n\t\tf();\n\n\t\tfor (const k in app.keyStates) {\n\t\t\tapp.keyStates[k] = processButtonState(app.keyStates[k]);\n\t\t}\n\n\t\tfor (const m in app.mouseStates) {\n\t\t\tapp.mouseStates[m] = processButtonState(app.mouseStates[m]);\n\t\t}\n\n\t\tapp.charInputted = [];\n\t\tapp.isMouseMoved = false;\n\t\tapp.isKeyPressed = false;\n\t\tapp.isKeyPressedRepeat = false;\n\t\tapp.isKeyReleased = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t};\n\n\tapp.stopped = false;\n\tapp.loopID = requestAnimationFrame(frame);\n\n}\n\n// main game loop\nrun(() => {\n\n\t// running this every frame now mainly because isFullscreen() is not updated real time when requested fullscreen\n\tupdateViewport();\n\n\tif (!app.loaded) {\n\t\tframeStart();\n\t\tdrawLoadScreen();\n\t\tframeEnd();\n\t} else {\n\n\t\t// TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n\t\tgame.trigger(\"input\");\n\n\t\tif (!debug.paused) {\n\t\t\tupdateFrame();\n\t\t}\n\n\t\tframeStart();\n\t\tdrawFrame();\n\n\t\tif (gopt.debug !== false) {\n\t\t\tdrawDebug();\n\t\t}\n\n\t\tframeEnd();\n\n\t}\n\n});\n\nloadFont(\n\t\"apl386\",\n\tapl386Src,\n\t45,\n\t74,\n);\n\nloadFont(\n\t\"apl386o\",\n\tapl386oSrc,\n\t45,\n\t74,\n);\n\nloadFont(\n\t\"sink\",\n\tsinkSrc,\n\t6,\n\t8,\n\t{\n\t\tchars: `█☺☻♥♦♣♠●○▪□■◘♪♫≡►◄⌂ÞÀß×¥↑↓→←◌●▼▲ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~Χ░▒▓ḀḁḂ│┬┤┌┐ḃḄ┼ḅḆḇḈḉḊḋḌ─├┴└┘ḍḎ⁞ḏḐḑḒḓḔḕḖḗḘ▄ḙḚḛḜ…ḝḞḟḠḡḢḣḤḥḦ▌▐ḧḨḩḪḫḬḭḮḯḰḱḲḳḴḵḶḷḸḹḺḻḼḽḾḿṀṁṂṃṄṅṆṇṈṉṊṋṌṍṎṏṐṑṒṓṔṕṖṗṘṙṚṛṜṝṞṟṠṡṢṣṤṥṦṧṨṩṪṫṬṭṮṯṰṱṲṳṴṵṶṷṸṹṺṻṼ`,\n\t}\n);\n\nloadFont(\n\t\"sinko\",\n\tsinkoSrc,\n\t8,\n\t10,\n);\n\nframeStart();\nframeEnd();\n\n// the exported ctx handle\nconst ctx: KaboomCtx = {\n\t// asset load\n\tloadRoot,\n\tloadSprite,\n\tloadSpriteAtlas,\n\tloadSound,\n\tloadFont,\n\tloadShader,\n\tloadAseprite,\n\tloadPedit,\n\tloadBean,\n\tload,\n\t// query\n\twidth,\n\theight,\n\tcenter,\n\tdt,\n\ttime,\n\tscreenshot,\n\trecord,\n\tisFocused,\n\tfocus,\n\tcursor,\n\tregCursor,\n\tfullscreen,\n\tisFullscreen,\n\tonLoad,\n\tisTouch: () => app.isTouch,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tshake,\n\ttoScreen,\n\ttoWorld,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\topacity,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tcircle,\n\tuvquad,\n\toutline,\n\tbody,\n\tshader,\n\ttimer,\n\tsolid,\n\tfixed,\n\tstay,\n\thealth,\n\tlifespan,\n\tz,\n\tmove,\n\toutview,\n\tcleanup,\n\tfollow,\n\tstate,\n\t// group events\n\ton,\n\tonUpdate,\n\tonDraw,\n\tonCollide,\n\tonClick,\n\tonHover,\n\t// input\n\tonKeyDown,\n\tonKeyPress,\n\tonKeyPressRepeat,\n\tonKeyRelease,\n\tonMouseDown,\n\tonMousePress,\n\tonMouseRelease,\n\tonMouseMove,\n\tonCharInput,\n\tonTouchStart,\n\tonTouchMove,\n\tonTouchEnd,\n\tmousePos,\n\tmouseWorldPos,\n\tmouseDeltaPos,\n\tisKeyDown,\n\tisKeyPressed,\n\tisKeyPressedRepeat,\n\tisKeyReleased,\n\tisMouseDown,\n\tisMousePressed,\n\tisMouseReleased,\n\tisMouseMoved,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume,\n\tburp,\n\taudioCtx: audio.ctx,\n\t// math\n\tTimer,\n\tLine,\n\tRect,\n\tCircle,\n\tVec2,\n\tColor,\n\tMat4,\n\tQuad,\n\tRNG,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tvec2,\n\trgb,\n\thsl2rgb,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\tformatText,\n\tdrawRect,\n\tdrawLine,\n\tdrawLines,\n\tdrawTriangle,\n\tdrawCircle,\n\tdrawEllipse,\n\tdrawUVQuad,\n\tdrawPolygon,\n\tdrawFormattedText,\n\tpushTransform,\n\tpopTransform,\n\tpushTranslate,\n\tpushRotate: pushRotateZ,\n\tpushScale,\n\t// debug\n\tdebug,\n\t// scene\n\tscene,\n\tgo,\n\t// level\n\taddLevel,\n\t// storage\n\tgetData,\n\tsetData,\n\t// plugin\n\tplug,\n\t// char sets\n\tASCII_CHARS,\n\tCP437_CHARS,\n\t// dom\n\tcanvas: app.canvas,\n\t// misc\n\taddKaboom,\n\t// dirs\n\tLEFT: Vec2.LEFT,\n\tRIGHT: Vec2.RIGHT,\n\tUP: Vec2.UP,\n\tDOWN: Vec2.DOWN,\n\t// colors\n\tRED: Color.RED,\n\tGREEN: Color.GREEN,\n\tBLUE: Color.BLUE,\n\tYELLOW: Color.YELLOW,\n\tMAGENTA: Color.MAGENTA,\n\tCYAN: Color.CYAN,\n\tWHITE: Color.WHITE,\n\tBLACK: Color.BLACK,\n\t// deprecated\n\tkeyIsDown: deprecate(\"keyIsDown()\", \"isKeyDown()\", isKeyDown),\n\tkeyIsPressed: deprecate(\"keyIsPressed()\", \"isKeyPressed()\", isKeyPressed),\n\tkeyIsPressedRep: deprecate(\"keyIsPressedRep()\", \"isKeyPressedRepeat()\", isKeyPressedRepeat),\n\tkeyIsReleased: deprecate(\"keyIsReleased()\", \"isKeyReleased()\", isKeyReleased),\n\tmouseIsDown: deprecate(\"mouseIsDown()\", \"isMouseDown()\", isMouseDown),\n\tmouseIsClicked: deprecate(\"mouseIsClicked()\", \"isMousePressed()\", isMousePressed),\n\tmouseIsReleased: deprecate(\"mouseIsReleased()\", \"isMouseReleased()\", isMouseReleased),\n\tmouseIsMoved: deprecate(\"mouseIsMoved()\", \"isMouseMoved()\", isMouseMoved),\n\tdir: deprecate(\"dir()\", \"Vec2.fromAngle()\", Vec2.fromAngle),\n\taction: deprecate(\"action()\", \"onUpdate()\", onUpdate),\n\trender: deprecate(\"render()\", \"onDraw()\", onDraw),\n\tcollides: deprecate(\"collides()\", \"onCollide()\", onCollide),\n\tclicks: deprecate(\"clicks()\", \"onClick()\", onClick),\n\thovers: deprecate(\"hovers()\", \"onHover()\", onHover),\n\tkeyDown: deprecate(\"keyDown()\", \"onKeyDown()\", onKeyDown),\n\tkeyPress: deprecate(\"keyPress()\", \"onKeyPress()\", onKeyPress),\n\tkeyPressRep: deprecate(\"keyPressRep()\", \"onKeyPressRepeat()\", onKeyPressRepeat),\n\tkeyRelease: deprecate(\"keyRelease()\", \"onKeyRelease()\", onKeyRelease),\n\tmouseDown: deprecate(\"mouseDown()\", \"onMouseDown()\", onMouseDown),\n\tmouseClick: deprecate(\"mouseClick()\", \"onMousePress()\", onMousePress),\n\tmouseRelease: deprecate(\"mouseRelease()\", \"onMouseRelease()\", onMouseRelease),\n\tmouseMove: deprecate(\"mouseMove()\", \"onMouseMove()\", onMouseMove),\n\tcharInput: deprecate(\"charInput()\", \"onCharInput()\", onCharInput),\n\ttouchStart: deprecate(\"touchStart()\", \"onTouchStart()\", onTouchStart),\n\ttouchMove: deprecate(\"touchMove()\", \"onTouchMove()\", onTouchMove),\n\ttouchEnd: deprecate(\"touchEnd()\", \"onTouchEnd()\", onTouchEnd),\n\tfocused: deprecate(\"focused()\", \"isFocused()\", isFocused),\n\tready: deprecate(\"ready()\", \"onLoad()\", onLoad),\n};\n\nif (gopt.plugins) {\n\tgopt.plugins.forEach(plug);\n}\n\n// export everything to window if global is set\nif (gopt.global !== false) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nreturn ctx;\n\n};\n","// Tuodaan kaboom-kirjasto\nimport kaboom from 'kaboom';\n// Alustetaan kaboom\nkaboom({\n    global: true,\n    fullscreen: true,\n    scale: 1,\n    debug: true,\n});\nloadRoot();\nloadSprite('bird', '/Users/jyrilindroos/source/repos/Ohke/kaboom/src/sprites/bird.png');\nloadSprite('link-going-right', 'https://i.imgur.com/yZIb802.png');\n\nscene(\"game\", () =>{\n\n});\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}