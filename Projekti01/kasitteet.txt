{
    {"API (Application Programming Interface)","Ohjelmointirajapinta, jota käyttäen sovellukset kommunikoivat keskenään. Yleistäen sillä tarkoitetaan mitä tahansa ohjelmointirajapintaa. Se voi olla sovelluksen sisäiseen käyttöön tarkoitettu rajapinta tai muille sovelluksille tarkoitettu ulkoinen rajapinta. Ulkoiset rajapinnat julkaistaan käyttämällä SOAP- tai REST-tyylisiä web-palveluita."},
    {"SOAP (Simple Object Access Protocol)","Se on SOA:n (Service Oriented Architecture) eli palvelukeskeisen arkkitehtuurin yleisimmin käytetty protokolla. Se käyttää XML:ää tiedon esitysmuotona. Tiedonsiirtoprotokollana on yleensä http, mutta myös muut protokollat, kuten SMTP (Simple Mail Transfer Protocol) tai JMS (Java Message Service) ovat mahdollisia. SOAP:ssa tiedon esitysmuoto on sidottu (XML), mutta ei siirtotapa."},
    {"REST (Representational State Transfer)","Se on API:en julkaisun de facto arkkitehtuurityyli. Se hyödyntää http-protokollaa ja sen standardimetodeja. Se on saavuttanut kasvavaa suosiota, koska se on kevyempi ja helppokäyttöisempi kuin SOAP, erityisesti käytettäessä tiedon esitysmuotona JSON:a (JavaScript Object Notation). Sillä voi käyttää myös muita esitysmuotoja kuten XML tai HTML. Siinä tiedon siirtotapa on sidottu (http), mutta ei esitysmuoto. Viime vuosina paljon suosiota saavuttanut mikropalveluarkkitehtuuri käyttää JSON/REST:iä.Erityisesti mobiilisovelluksissa JSON/REST soveltuu paremmin kommunikointiin taustajärjestelmien kanssa kuin XML/SOAP helpomman toteutuksen ja ylläpidettävyyden sekä paremman suorituskyvyn vuoksi. JSON/REST onkin mobiilisovellusten toiminnan selkäranka."},
    {"JSON (JavaScript Object Notation)","Tiedon esitysmuoto, jota käytetään erityisesti REST-tyylisessä tiedonvälityksessä. Se käyttää nimi/arvo pareja sekä taulukoita tiedon esittämiseen."},
    {"API gateway","Se on komponentti, jossa tapahtuu API:en ajoaikainen suoritus. Sen kautta API:t voidaan julkaista tehokkaasti, turvallisesti ja hallitusti. Sen toiminnallisuuksiin kuuluu mm. orkesterointi, reititys sekä sanomien rakenteen ja sisällön muokkaus. Sen tietoturvaan liittyviin toiminnallisuuksiin kuuluvat esimerkiksi API:en suojaus luvattomalta käytöltä, tietoturvauhkien tunnistaminen ja torjunta sekä tietojen salaus ja allekirjoitus. Se tukee myös API:en käyttöön liittyviä ansaintamalleja (monetization)."},
    {"API manager","Sen avulla hallitaan API:en julkaisu, versiointi, poistaminen sekä tietoturva, käyttäjät ja käyttöoikeudet. Sen tai erillisen sellaiseen liittyvän työkalun avulla toteutetaan API:en käyttämät käsittelysäännöt (API policy) liittyen mm. tietoturvaan, sanomien muunnoksiin ja reititykseen. Lisäksi se voi sisältää monitorointiin ja analytiikkaan liittyviä toiminnallisuuksia."},
    {"API portaali","Se on itsepalveluportaali, jossa julkaistut API:t ovat sovelluskehittäjien selattavissa ja testattavissa käyttöoikeuksien puitteissa. Siitä löytyy API:en dokumentaatio, ja siinä sovelluskehittäjä voi koostaa haluamansa API:t oman sovelluksensa käyttöön. Portaali voi sisältää myös blogeja ja keskustelufoorumeita. Sen keskeinen hyöty on se, että sovelluskehittäjät voivat itsenäisesti hyödyntää sovelluksessaan yrityksen julkaisemia rajapintoja."},
    {"API analytiikka","Tietoa voidaan näyttää sekä API managerissa että portaalissa, mutta tätä varten voi olla myös erillinen komponentti. Sen avulla API:en käytöstä saadaan tietoa, joka auttaa niin liiketoiminnan, uusien API:en kuin kapasiteetinkin suunnittelussa."}
}
